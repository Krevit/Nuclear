{"version":3,"sources":["minicolors.js","password.js","slug.js","tag.js","upload.js","library.js","gallery.js","document.js","editor.js","fields.js"],"names":["factory","define","amd","exports","module","require","jQuery","$","init","input","settings","minicolors","defaults","format","attr","keywords","opacity","data","extend","addClass","theme","toggleClass","dataUris","undefined","position","each","split","this","$input_size","prop","wrap","after","control","inline","next","on","event","preventDefault","focus","parent","find","end","updateFromInput","destroy","removeData","removeProp","removeClass","before","remove","show","panel","hasClass","hide","stop","fadeIn","showSpeed","call","get","fadeOut","hideSpeed","move","target","animate","wx","wy","r","phi","parents","picker","offsetX","offset","left","offsetY","top","x","Math","round","pageX","y","pageY","duration","animationSpeed","originalEvent","changedTouches","width","height","is","sqrt","atan2","PI","cos","sin","animationEasing","updateFromControl","getCoords","container","length","outerWidth","outerHeight","hue","saturation","brightness","hex","val","swatch","grid","slider","opacitySlider","gridPicker","sliderPicker","opacityPicker","gridPos","sliderPos","opacityPos","keepWithin","floor","hsb2hex","h","s","b","css","parseInt","parseFloat","toFixed","rgb","hex2rgb","isNaN","a","value","g","convertCase","letterCase","backgroundColor","doChange","preserveInputValue","hsb","isRgb","rgbString2hex","alpha","getAlpha","parseHex","parseInput","defaultValue","hex2hsb","map","trim","toLowerCase","inArray","parseRgb","ceil","lastChange","change","changeDelay","clearTimeout","setTimeout","trigger","rgbObject","rgbString","string","toUpperCase","expand","replace","match","obj","values","rgba","min","max","hsb2rgb","v","t1","t2","t3","toString","slice","rgb2hex","nr","join","rgb2hsb","delta","indexOf","substring","fn","method","eq","color","document","add","swatchOpacity","closest","keyCode","blur","window","Meter","el","field","meter","_init","prototype","characters","capitalletters","lowerletters","number","special","upperCase","RegExp","lowerCase","numbers","specialchars","self","_checkStrength","_setPercentage","percentage","_setClass","total","_getTotal","_getPercentage","Slug","follow","dirty","_initEvents","_setSlug","changed","slug","_slugify","str","from","to","i","l","charAt","Tag","list","inputItem","valueInput","tags","_extractValue","bind","e","which","stopPropagation","_addTag","_removeTag","_setListClass","tag","_setValue","duplicate","push","_createTag","id","html_entities","insertBefore","clean","grep","n","Uploader","zone","options","Indicator","name","size","selectButton","uploadInput","outputList","indicator","enabled","append","action","fileQueue","statusIndicators","current","inProcess","maxsize","queue","dataTransfer","files","click","fd","FormData","_createIndicator","prepend","_upload","className","ajax","xhr","xhrobj","ajaxSettings","upload","addEventListener","setProgress","loaded","url","type","contentType","processData","cache","success","complete","always","progressContainer","appendTo","progressBar","messageWrapper","thumbnail","filename","message","readable_size","clone","percent","reply","_success","response","_error","html","mimetype","text","Library","LibraryIndicator","app","documentsLibrary","retrieveURL","modal","scroller","mediaList","searchForm","noResults","disabler","mediaDetails","gallerySortable","numSelected","clearButton","removeButton","insertButton","closeButton","dropzone","controller","isOpen","isRetrieved","mode","masterFilter","lastValue","uploadIndicators","controllerDirty","dialog","Modal","uploader","_disableList","_clearGallery","_deselectDocument","setValue","close","search","_search","sortable","cursor","tolerance","placeholder","delay","scroll","disableSelection","_deselectGallery","run","_setMode","_reset","_initByMode","_retrieve","open","_initGallery","_initDocument","_setMasterFilter","unbind","_selectForGallery","_parseForGallery","mediaIds","getValue","JSON","parse","media","_selectGallery","_recalculateSelected","filter","_selectForDocument","_parseForDocument","mediaId","_selectDocument","selectMediaById","children","detail","details","empty","selected","_parseMedia","array","gallery","openModal","closeModal","key","_filter","refilter","getJSON","_populateList","_enableList","_enableUploader","createMediaThumbnail","_anyResults","_yesResults","formData","selector","Gallery","library","addButton","mediaGallery","_setGallery","Modernizr","touch","_parseGallery","attribute","stringify","_createThumbnail","ready","App","Document","fileName","_removeDocument","Editor","EditorDialog","EditorGallery","EditorDocument","toolbar","_controls","resize","delayedResize","shiftKey","flush","indent","controls","_getGalleryController","_getDocumentController","bodyScrollPos","insert","element","start","selectionStart","selectionEnd","deleteSelection","right","selections","pattern","edits","portion","matches","bold","italic","code","link","selection","urlInput","quote","heading","hrule","ruler","readmore","sourceInput","onConfirmEvent","libraryDialog","linkDialog","galleryButton","mediaButton","alttextInput","textInput","setMode","_setValueLibrary","_setValueLink","add_http","editorDialog"],"mappings":"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","file":"form.js","sourcesContent":["/*\n * jQuery MiniColors: A tiny color picker built on jQuery\n *\n * Copyright: Cory LaViska for A Beautiful Site, LLC: http://www.abeautifulsite.net/\n *\n * Contribute: https://github.com/claviska/jquery-minicolors\n *\n * @license: http://opensource.org/licenses/MIT\n *\n */\n(function (factory) {\n    /* jshint ignore:start */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory(require('jquery'));\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n    /* jshint ignore:end */\n}(function ($) {\n\n    // Defaults\n    $.minicolors = {\n        defaults: {\n            animationSpeed: 50,\n            animationEasing: 'swing',\n            change: null,\n            changeDelay: 0,\n            control: 'hue',\n            dataUris: true,\n            defaultValue: '',\n            format: 'hex',\n            hide: null,\n            hideSpeed: 100,\n            inline: false,\n            keywords: '',\n            letterCase: 'lowercase',\n            opacity: false,\n            position: 'bottom left',\n            show: null,\n            showSpeed: 100,\n            theme: 'default'\n        }\n    };\n\n    // Public methods\n    $.extend($.fn, {\n        minicolors: function(method, data) {\n\n            switch(method) {\n\n                // Destroy the control\n                case 'destroy':\n                    $(this).each( function() {\n                        destroy($(this));\n                    });\n                    return $(this);\n\n                // Hide the color picker\n                case 'hide':\n                    hide();\n                    return $(this);\n\n                // Get/set opacity\n                case 'opacity':\n                    // Getter\n                    if( data === undefined ) {\n                        // Getter\n                        return $(this).attr('data-opacity');\n                    } else {\n                        // Setter\n                        $(this).each( function() {\n                            updateFromInput($(this).attr('data-opacity', data));\n                        });\n                    }\n                    return $(this);\n\n                // Get an RGB(A) object based on the current color/opacity\n                case 'rgbObject':\n                    return rgbObject($(this), method === 'rgbaObject');\n\n                // Get an RGB(A) string based on the current color/opacity\n                case 'rgbString':\n                case 'rgbaString':\n                    return rgbString($(this), method === 'rgbaString');\n\n                // Get/set settings on the fly\n                case 'settings':\n                    if( data === undefined ) {\n                        return $(this).data('minicolors-settings');\n                    } else {\n                        // Setter\n                        $(this).each( function() {\n                            var settings = $(this).data('minicolors-settings') || {};\n                            destroy($(this));\n                            $(this).minicolors($.extend(true, settings, data));\n                        });\n                    }\n                    return $(this);\n\n                // Show the color picker\n                case 'show':\n                    show( $(this).eq(0) );\n                    return $(this);\n\n                // Get/set the hex color value\n                case 'value':\n                    if( data === undefined ) {\n                        // Getter\n                        return $(this).val();\n                    } else {\n                        // Setter\n                        $(this).each( function() {\n                            if( typeof(data) === 'object' ) {\n                                if( data.opacity ) {\n                                    $(this).attr('data-opacity', keepWithin(data.opacity, 0, 1));\n                                }\n                                if( data.color ) {\n                                    $(this).val(data.color);\n                                }\n                            } else {\n                                $(this).val(data);\n                            }\n                            updateFromInput($(this));\n                        });\n                    }\n                    return $(this);\n\n                // Initializes the control\n                default:\n                    if( method !== 'create' ) data = method;\n                    $(this).each( function() {\n                        init($(this), data);\n                    });\n                    return $(this);\n\n            }\n\n        }\n    });\n\n    // Initialize input elements\n    function init(input, settings) {\n\n        var minicolors = $('<div class=\"minicolors\" />'),\n            defaults = $.minicolors.defaults,\n            format = input.attr('data-format'),\n            keywords = input.attr('data-keywords'),\n            opacity = input.attr('data-opacity');\n\n        // Do nothing if already initialized\n        if( input.data('minicolors-initialized') ) return;\n\n        // Handle settings\n        settings = $.extend(true, {}, defaults, settings);\n\n        // The wrapper\n        minicolors\n            .addClass('minicolors-theme-' + settings.theme)\n            .toggleClass('minicolors-with-opacity', settings.opacity)\n            .toggleClass('minicolors-no-data-uris', settings.dataUris !== true);\n\n        // Custom positioning\n        if( settings.position !== undefined ) {\n            $.each(settings.position.split(' '), function() {\n                minicolors.addClass('minicolors-position-' + this);\n            });\n        }\n\n        // Input size\n        if( format === 'rgb' ) {\n            $input_size = opacity ? '25' : '20';\n        } else {\n            $input_size = keywords ? '11' : '7';\n        }\n\n        // The input\n        input\n            .addClass('minicolors-input')\n            .data('minicolors-initialized', false)\n            .data('minicolors-settings', settings)\n            .prop('size', $input_size)\n            .wrap(minicolors)\n            .after(\n                '<div class=\"minicolors-panel minicolors-slider-' + settings.control + '\">' +\n                    '<div class=\"minicolors-slider minicolors-sprite\">' +\n                        '<div class=\"minicolors-picker\"></div>' +\n                    '</div>' +\n                    '<div class=\"minicolors-opacity-slider minicolors-sprite\">' +\n                        '<div class=\"minicolors-picker\"></div>' +\n                    '</div>' +\n                    '<div class=\"minicolors-grid minicolors-sprite\">' +\n                        '<div class=\"minicolors-grid-inner\"></div>' +\n                        '<div class=\"minicolors-picker\"><div></div></div>' +\n                    '</div>' +\n                '</div>'\n            );\n\n        // The swatch\n        if( !settings.inline ) {\n            input.after('<span class=\"minicolors-swatch minicolors-sprite\"><span class=\"minicolors-swatch-color\"></span></span>');\n            input.next('.minicolors-swatch').on('click', function(event) {\n                event.preventDefault();\n                input.focus();\n            });\n        }\n\n        // Prevent text selection in IE\n        input.parent().find('.minicolors-panel').on('selectstart', function() { return false; }).end();\n\n        // Inline controls\n        if( settings.inline ) input.parent().addClass('minicolors-inline');\n\n        updateFromInput(input, false);\n\n        input.data('minicolors-initialized', true);\n\n    }\n\n    // Returns the input back to its original state\n    function destroy(input) {\n\n        var minicolors = input.parent();\n\n        // Revert the input element\n        input\n            .removeData('minicolors-initialized')\n            .removeData('minicolors-settings')\n            .removeProp('size')\n            .removeClass('minicolors-input');\n\n        // Remove the wrap and destroy whatever remains\n        minicolors.before(input).remove();\n\n    }\n\n    // Shows the specified dropdown panel\n    function show(input) {\n\n        var minicolors = input.parent(),\n            panel = minicolors.find('.minicolors-panel'),\n            settings = input.data('minicolors-settings');\n\n        // Do nothing if uninitialized, disabled, inline, or already open\n        if( !input.data('minicolors-initialized') ||\n            input.prop('disabled') ||\n            minicolors.hasClass('minicolors-inline') ||\n            minicolors.hasClass('minicolors-focus')\n        ) return;\n\n        hide();\n\n        minicolors.addClass('minicolors-focus');\n        panel\n            .stop(true, true)\n            .fadeIn(settings.showSpeed, function() {\n                if( settings.show ) settings.show.call(input.get(0));\n            });\n\n    }\n\n    // Hides all dropdown panels\n    function hide() {\n\n        $('.minicolors-focus').each( function() {\n\n            var minicolors = $(this),\n                input = minicolors.find('.minicolors-input'),\n                panel = minicolors.find('.minicolors-panel'),\n                settings = input.data('minicolors-settings');\n\n            panel.fadeOut(settings.hideSpeed, function() {\n                if( settings.hide ) settings.hide.call(input.get(0));\n                minicolors.removeClass('minicolors-focus');\n            });\n\n        });\n    }\n\n    // Moves the selected picker\n    function move(target, event, animate) {\n\n        var input = target.parents('.minicolors').find('.minicolors-input'),\n            settings = input.data('minicolors-settings'),\n            picker = target.find('[class$=-picker]'),\n            offsetX = target.offset().left,\n            offsetY = target.offset().top,\n            x = Math.round(event.pageX - offsetX),\n            y = Math.round(event.pageY - offsetY),\n            duration = animate ? settings.animationSpeed : 0,\n            wx, wy, r, phi;\n\n        // Touch support\n        if( event.originalEvent.changedTouches ) {\n            x = event.originalEvent.changedTouches[0].pageX - offsetX;\n            y = event.originalEvent.changedTouches[0].pageY - offsetY;\n        }\n\n        // Constrain picker to its container\n        if( x < 0 ) x = 0;\n        if( y < 0 ) y = 0;\n        if( x > target.width() ) x = target.width();\n        if( y > target.height() ) y = target.height();\n\n        // Constrain color wheel values to the wheel\n        if( target.parent().is('.minicolors-slider-wheel') && picker.parent().is('.minicolors-grid') ) {\n            wx = 75 - x;\n            wy = 75 - y;\n            r = Math.sqrt(wx * wx + wy * wy);\n            phi = Math.atan2(wy, wx);\n            if( phi < 0 ) phi += Math.PI * 2;\n            if( r > 75 ) {\n                r = 75;\n                x = 75 - (75 * Math.cos(phi));\n                y = 75 - (75 * Math.sin(phi));\n            }\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n\n        // Move the picker\n        if( target.is('.minicolors-grid') ) {\n            picker\n                .stop(true)\n                .animate({\n                    top: y + 'px',\n                    left: x + 'px'\n                }, duration, settings.animationEasing, function() {\n                    updateFromControl(input, target);\n                });\n        } else {\n            picker\n                .stop(true)\n                .animate({\n                    top: y + 'px'\n                }, duration, settings.animationEasing, function() {\n                    updateFromControl(input, target);\n                });\n        }\n\n    }\n\n    // Sets the input based on the color picker values\n    function updateFromControl(input, target) {\n\n        function getCoords(picker, container) {\n\n            var left, top;\n            if( !picker.length || !container ) return null;\n            left = picker.offset().left;\n            top = picker.offset().top;\n\n            return {\n                x: left - container.offset().left + (picker.outerWidth() / 2),\n                y: top - container.offset().top + (picker.outerHeight() / 2)\n            };\n\n        }\n\n        var hue, saturation, brightness, x, y, r, phi,\n\n            hex = input.val(),\n            format = input.attr('data-format'),\n            keywords = input.attr('data-keywords'),\n            opacity = input.attr('data-opacity'),\n\n            // Helpful references\n            minicolors = input.parent(),\n            settings = input.data('minicolors-settings'),\n            swatch = minicolors.find('.minicolors-swatch'),\n\n            // Panel objects\n            grid = minicolors.find('.minicolors-grid'),\n            slider = minicolors.find('.minicolors-slider'),\n            opacitySlider = minicolors.find('.minicolors-opacity-slider'),\n\n            // Picker objects\n            gridPicker = grid.find('[class$=-picker]'),\n            sliderPicker = slider.find('[class$=-picker]'),\n            opacityPicker = opacitySlider.find('[class$=-picker]'),\n\n            // Picker positions\n            gridPos = getCoords(gridPicker, grid),\n            sliderPos = getCoords(sliderPicker, slider),\n            opacityPos = getCoords(opacityPicker, opacitySlider);\n\n        // Handle colors\n        if( target.is('.minicolors-grid, .minicolors-slider, .minicolors-opacity-slider') ) {\n\n            // Determine HSB values\n            switch(settings.control) {\n\n                case 'wheel':\n                    // Calculate hue, saturation, and brightness\n                    x = (grid.width() / 2) - gridPos.x;\n                    y = (grid.height() / 2) - gridPos.y;\n                    r = Math.sqrt(x * x + y * y);\n                    phi = Math.atan2(y, x);\n                    if( phi < 0 ) phi += Math.PI * 2;\n                    if( r > 75 ) {\n                        r = 75;\n                        gridPos.x = 69 - (75 * Math.cos(phi));\n                        gridPos.y = 69 - (75 * Math.sin(phi));\n                    }\n                    saturation = keepWithin(r / 0.75, 0, 100);\n                    hue = keepWithin(phi * 180 / Math.PI, 0, 360);\n                    brightness = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n                    hex = hsb2hex({\n                        h: hue,\n                        s: saturation,\n                        b: brightness\n                    });\n\n                    // Update UI\n                    slider.css('backgroundColor', hsb2hex({ h: hue, s: saturation, b: 100 }));\n                    break;\n\n                case 'saturation':\n                    // Calculate hue, saturation, and brightness\n                    hue = keepWithin(parseInt(gridPos.x * (360 / grid.width()), 10), 0, 360);\n                    saturation = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n                    brightness = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n                    hex = hsb2hex({\n                        h: hue,\n                        s: saturation,\n                        b: brightness\n                    });\n\n                    // Update UI\n                    slider.css('backgroundColor', hsb2hex({ h: hue, s: 100, b: brightness }));\n                    minicolors.find('.minicolors-grid-inner').css('opacity', saturation / 100);\n                    break;\n\n                case 'brightness':\n                    // Calculate hue, saturation, and brightness\n                    hue = keepWithin(parseInt(gridPos.x * (360 / grid.width()), 10), 0, 360);\n                    saturation = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n                    brightness = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n                    hex = hsb2hex({\n                        h: hue,\n                        s: saturation,\n                        b: brightness\n                    });\n\n                    // Update UI\n                    slider.css('backgroundColor', hsb2hex({ h: hue, s: saturation, b: 100 }));\n                    minicolors.find('.minicolors-grid-inner').css('opacity', 1 - (brightness / 100));\n                    break;\n\n                default:\n                    // Calculate hue, saturation, and brightness\n                    hue = keepWithin(360 - parseInt(sliderPos.y * (360 / slider.height()), 10), 0, 360);\n                    saturation = keepWithin(Math.floor(gridPos.x * (100 / grid.width())), 0, 100);\n                    brightness = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n                    hex = hsb2hex({\n                        h: hue,\n                        s: saturation,\n                        b: brightness\n                    });\n\n                    // Update UI\n                    grid.css('backgroundColor', hsb2hex({ h: hue, s: 100, b: 100 }));\n                    break;\n\n            }\n\n            // Handle opacity\n            if( settings.opacity ) {\n                opacity = parseFloat(1 - (opacityPos.y / opacitySlider.height())).toFixed(2);\n            } else {\n                opacity = 1;\n            }\n            if( settings.opacity ) input.attr('data-opacity', opacity);\n\n            // Set color string\n            if( format === 'rgb' ) {\n                // Returns RGB(A) string\n                var rgb = hex2rgb(hex),\n                    opacity = input.attr('data-opacity') === '' ? 1 : keepWithin( parseFloat( input.attr('data-opacity') ).toFixed(2), 0, 1 );\n                if( isNaN( opacity ) || !settings.opacity ) opacity = 1;\n\n                if( input.minicolors('rgbObject').a <= 1 && rgb && settings.opacity) {\n                    // Set RGBA string if alpha\n                    value = 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + parseFloat( opacity ) + ')';\n                } else {\n                    // Set RGB string (alpha = 1)\n                    value = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n                }\n            } else {\n                // Returns hex color\n                value = convertCase( hex, settings.letterCase );\n            }\n\n            // Update value from picker\n            input.val( value );\n        }\n\n        // Set swatch color\n        swatch.find('span').css({\n            backgroundColor: hex,\n            opacity: opacity\n        });\n\n        // Handle change event\n        doChange(input, value, opacity);\n\n    }\n\n    // Sets the color picker values from the input\n    function updateFromInput(input, preserveInputValue) {\n\n        var hex,\n            hsb,\n            format = input.attr('data-format'),\n            keywords = input.attr('data-keywords'),\n            opacity,\n            x, y, r, phi,\n\n            // Helpful references\n            minicolors = input.parent(),\n            settings = input.data('minicolors-settings'),\n            swatch = minicolors.find('.minicolors-swatch'),\n\n            // Panel objects\n            grid = minicolors.find('.minicolors-grid'),\n            slider = minicolors.find('.minicolors-slider'),\n            opacitySlider = minicolors.find('.minicolors-opacity-slider'),\n\n            // Picker objects\n            gridPicker = grid.find('[class$=-picker]'),\n            sliderPicker = slider.find('[class$=-picker]'),\n            opacityPicker = opacitySlider.find('[class$=-picker]');\n\n        // Determine hex/HSB values\n        if( isRgb(input.val()) ) {\n            // If input value is a rgb(a) string, convert it to hex color and update opacity\n            hex = rgbString2hex(input.val());\n            alpha = keepWithin(parseFloat(getAlpha(input.val())).toFixed(2), 0, 1);\n            if( alpha ) {\n                input.attr('data-opacity', alpha);\n            }\n        } else {\n            hex = convertCase(parseHex(input.val(), true), settings.letterCase);\n        }\n\n        if( !hex ){\n            hex = convertCase(parseInput(settings.defaultValue, true), settings.letterCase);\n        }\n        hsb = hex2hsb(hex);\n\n        // Get array of lowercase keywords\n        keywords = !keywords ? [] : $.map(keywords.split(','), function(a) {\n            return $.trim(a.toLowerCase());\n        });\n\n        // Set color string\n        if( input.val() !== '' && $.inArray(input.val().toLowerCase(), keywords) > -1 ) {\n            value = convertCase(input.val());\n        } else {\n            value = isRgb(input.val()) ? parseRgb(input.val()) : hex;\n        }\n\n        // Update input value\n        if( !preserveInputValue ) input.val(value);\n\n        // Determine opacity value\n        if( settings.opacity ) {\n            // Get from data-opacity attribute and keep within 0-1 range\n            opacity = input.attr('data-opacity') === '' ? 1 : keepWithin(parseFloat(input.attr('data-opacity')).toFixed(2), 0, 1);\n            if( isNaN(opacity) ) opacity = 1;\n            input.attr('data-opacity', opacity);\n            swatch.find('span').css('opacity', opacity);\n\n            // Set opacity picker position\n            y = keepWithin(opacitySlider.height() - (opacitySlider.height() * opacity), 0, opacitySlider.height());\n            opacityPicker.css('top', y + 'px');\n        }\n\n        // Set opacity to zero if input value is transparent\n        if( input.val().toLowerCase() === 'transparent' ) {\n            swatch.find('span').css('opacity', 0);\n        }\n\n        // Update swatch\n        swatch.find('span').css('backgroundColor', hex);\n\n        // Determine picker locations\n        switch(settings.control) {\n\n            case 'wheel':\n                // Set grid position\n                r = keepWithin(Math.ceil(hsb.s * 0.75), 0, grid.height() / 2);\n                phi = hsb.h * Math.PI / 180;\n                x = keepWithin(75 - Math.cos(phi) * r, 0, grid.width());\n                y = keepWithin(75 - Math.sin(phi) * r, 0, grid.height());\n                gridPicker.css({\n                    top: y + 'px',\n                    left: x + 'px'\n                });\n\n                // Set slider position\n                y = 150 - (hsb.b / (100 / grid.height()));\n                if( hex === '' ) y = 0;\n                sliderPicker.css('top', y + 'px');\n\n                // Update panel color\n                slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: hsb.s, b: 100 }));\n                break;\n\n            case 'saturation':\n                // Set grid position\n                x = keepWithin((5 * hsb.h) / 12, 0, 150);\n                y = keepWithin(grid.height() - Math.ceil(hsb.b / (100 / grid.height())), 0, grid.height());\n                gridPicker.css({\n                    top: y + 'px',\n                    left: x + 'px'\n                });\n\n                // Set slider position\n                y = keepWithin(slider.height() - (hsb.s * (slider.height() / 100)), 0, slider.height());\n                sliderPicker.css('top', y + 'px');\n\n                // Update UI\n                slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: 100, b: hsb.b }));\n                minicolors.find('.minicolors-grid-inner').css('opacity', hsb.s / 100);\n                break;\n\n            case 'brightness':\n                // Set grid position\n                x = keepWithin((5 * hsb.h) / 12, 0, 150);\n                y = keepWithin(grid.height() - Math.ceil(hsb.s / (100 / grid.height())), 0, grid.height());\n                gridPicker.css({\n                    top: y + 'px',\n                    left: x + 'px'\n                });\n\n                // Set slider position\n                y = keepWithin(slider.height() - (hsb.b * (slider.height() / 100)), 0, slider.height());\n                sliderPicker.css('top', y + 'px');\n\n                // Update UI\n                slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: hsb.s, b: 100 }));\n                minicolors.find('.minicolors-grid-inner').css('opacity', 1 - (hsb.b / 100));\n                break;\n\n            default:\n                // Set grid position\n                x = keepWithin(Math.ceil(hsb.s / (100 / grid.width())), 0, grid.width());\n                y = keepWithin(grid.height() - Math.ceil(hsb.b / (100 / grid.height())), 0, grid.height());\n                gridPicker.css({\n                    top: y + 'px',\n                    left: x + 'px'\n                });\n\n                // Set slider position\n                y = keepWithin(slider.height() - (hsb.h / (360 / slider.height())), 0, slider.height());\n                sliderPicker.css('top', y + 'px');\n\n                // Update panel color\n                grid.css('backgroundColor', hsb2hex({ h: hsb.h, s: 100, b: 100 }));\n                break;\n\n        }\n\n        // Fire change event, but only if minicolors is fully initialized\n        if( input.data('minicolors-initialized') ) {\n            doChange(input, value, opacity);\n        }\n\n    }\n\n    // Runs the change and changeDelay callbacks\n    function doChange(input, value, opacity) {\n\n        var settings = input.data('minicolors-settings'),\n            lastChange = input.data('minicolors-lastChange');\n\n        // Only run if it actually changed\n        if( !lastChange || lastChange.value !== value || lastChange.opacity !== opacity ) {\n\n            // Remember last-changed value\n            input.data('minicolors-lastChange', {\n                value: value,\n                opacity: opacity\n            });\n\n            // Fire change event\n            if( settings.change ) {\n                if( settings.changeDelay ) {\n                    // Call after a delay\n                    clearTimeout(input.data('minicolors-changeTimeout'));\n                    input.data('minicolors-changeTimeout', setTimeout( function() {\n                        settings.change.call(input.get(0), value, opacity);\n                    }, settings.changeDelay));\n                } else {\n                    // Call immediately\n                    settings.change.call(input.get(0), value, opacity);\n                }\n            }\n            input.trigger('change').trigger('input');\n        }\n\n    }\n\n    // Generates an RGB(A) object based on the input's value\n    function rgbObject(input) {\n        var hex = parseHex($(input).val(), true),\n            rgb = hex2rgb(hex),\n            opacity = $(input).attr('data-opacity');\n        if( !rgb ) return null;\n        if( opacity !== undefined ) $.extend(rgb, { a: parseFloat(opacity) });\n        return rgb;\n    }\n\n    // Generates an RGB(A) string based on the input's value\n    function rgbString(input, alpha) {\n        var hex = parseHex($(input).val(), true),\n            rgb = hex2rgb(hex),\n            opacity = $(input).attr('data-opacity');\n        if( !rgb ) return null;\n        if( opacity === undefined ) opacity = 1;\n        if( alpha ) {\n            return 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + parseFloat(opacity) + ')';\n        } else {\n            return 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n        }\n    }\n\n    // Converts to the letter case specified in settings\n    function convertCase(string, letterCase) {\n        return letterCase === 'uppercase' ? string.toUpperCase() : string.toLowerCase();\n    }\n\n    // Parses a string and returns a valid hex string when possible\n    function parseHex(string, expand) {\n        string = string.replace(/^#/g, '');\n        if( !string.match(/^[A-F0-9]{3,6}/ig) ) return '';\n        if( string.length !== 3 && string.length !== 6 ) return '';\n        if( string.length === 3 && expand ) {\n            string = string[0] + string[0] + string[1] + string[1] + string[2] + string[2];\n        }\n        return '#' + string;\n    }\n\n    // Parses a string and returns a valid RGB(A) string when possible\n    function parseRgb(string, obj) {\n\n        var values = string.replace(/[^\\d,.]/g, ''),\n            rgba = values.split(','),\n            output;\n\n        rgba[0] = keepWithin(parseInt(rgba[0], 10), 0, 255);\n        rgba[1] = keepWithin(parseInt(rgba[1], 10), 0, 255);\n        rgba[2] = keepWithin(parseInt(rgba[2], 10), 0, 255);\n        if( rgba[3] ) {\n            rgba[3] = keepWithin(parseFloat(rgba[3], 10), 0, 1);\n        }\n\n        // Return RGBA object\n        if( obj ) {\n            return {\n                r: rgba[0],\n                g: rgba[1],\n                b: rgba[2],\n                a: rgba[3] ? rgba[3] : null\n            };\n        }\n\n        // Return RGBA string\n        if( typeof(rgba[3]) !== 'undefined' && rgba[3] <= 1 ) {\n            return 'rgba(' + rgba[0] + ', ' + rgba[1] + ', ' + rgba[2] + ', ' + rgba[3] + ')';\n        } else {\n            return 'rgb(' + rgba[0] + ', ' + rgba[1] + ', ' + rgba[2] + ')';\n        }\n\n    }\n\n    // Parses a string and returns a valid color string when possible\n    function parseInput(string, expand) {\n        if( isRgb(string) ) {\n            // Returns a valid rgb(a) string\n            return parseRgb(string);\n        } else {\n            return parseHex(string, expand);\n        }\n    }\n\n    // Keeps value within min and max\n    function keepWithin(value, min, max) {\n        if( value < min ) value = min;\n        if( value > max ) value = max;\n        return value;\n    }\n\n    // Checks if a string is a valid RGB(A) string\n    function isRgb(string) {\n        rgb = string.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n        return (rgb && rgb.length === 4) ? true : false;\n    }\n\n    // Function to get alpha from a RGB(A) string\n    function getAlpha(rgba) {\n        rgba = rgba.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})[\\s+]?/i);\n        return (rgba && rgba.length === 6) ? rgba[4] : '1';\n    }\n\n   // Converts an HSB object to an RGB object\n    function hsb2rgb(hsb) {\n        var rgb = {};\n        var h = Math.round(hsb.h);\n        var s = Math.round(hsb.s * 255 / 100);\n        var v = Math.round(hsb.b * 255 / 100);\n        if(s === 0) {\n            rgb.r = rgb.g = rgb.b = v;\n        } else {\n            var t1 = v;\n            var t2 = (255 - s) * v / 255;\n            var t3 = (t1 - t2) * (h % 60) / 60;\n            if( h === 360 ) h = 0;\n            if( h < 60 ) { rgb.r = t1; rgb.b = t2; rgb.g = t2 + t3; }\n            else if( h < 120 ) {rgb.g = t1; rgb.b = t2; rgb.r = t1 - t3; }\n            else if( h < 180 ) {rgb.g = t1; rgb.r = t2; rgb.b = t2 + t3; }\n            else if( h < 240 ) {rgb.b = t1; rgb.r = t2; rgb.g = t1 - t3; }\n            else if( h < 300 ) {rgb.b = t1; rgb.g = t2; rgb.r = t2 + t3; }\n            else if( h < 360 ) {rgb.r = t1; rgb.g = t2; rgb.b = t1 - t3; }\n            else { rgb.r = 0; rgb.g = 0; rgb.b = 0; }\n        }\n        return {\n            r: Math.round(rgb.r),\n            g: Math.round(rgb.g),\n            b: Math.round(rgb.b)\n        };\n    }\n\n    // Converts an RGB string to a hex string\n    function rgbString2hex(rgb){\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n        return (rgb && rgb.length === 4) ? '#' +\n        ('0' + parseInt(rgb[1],10).toString(16)).slice(-2) +\n        ('0' + parseInt(rgb[2],10).toString(16)).slice(-2) +\n        ('0' + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\n    }\n\n    // Converts an RGB object to a hex string\n    function rgb2hex(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n        $.each(hex, function(nr, val) {\n            if (val.length === 1) hex[nr] = '0' + val;\n        });\n        return '#' + hex.join('');\n    }\n\n    // Converts an HSB object to a hex string\n    function hsb2hex(hsb) {\n        return rgb2hex(hsb2rgb(hsb));\n    }\n\n    // Converts a hex string to an HSB object\n    function hex2hsb(hex) {\n        var hsb = rgb2hsb(hex2rgb(hex));\n        if( hsb.s === 0 ) hsb.h = 360;\n        return hsb;\n    }\n\n    // Converts an RGB object to an HSB object\n    function rgb2hsb(rgb) {\n        var hsb = { h: 0, s: 0, b: 0 };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max !== 0 ? 255 * delta / max : 0;\n        if( hsb.s !== 0 ) {\n            if( rgb.r === max ) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if( rgb.g === max ) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if( hsb.h < 0 ) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n\n    // Converts a hex string to an RGB object\n    function hex2rgb(hex) {\n        hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {\n            /* jshint ignore:start */\n            r: hex >> 16,\n            g: (hex & 0x00FF00) >> 8,\n            b: (hex & 0x0000FF)\n            /* jshint ignore:end */\n        };\n    }\n\n    // Handle events\n    $(document)\n        // Hide on clicks outside of the control\n        .on('mousedown.minicolors touchstart.minicolors', function(event) {\n            if( !$(event.target).parents().add(event.target).hasClass('minicolors') ) {\n                hide();\n            }\n        })\n        // Start moving\n        .on('mousedown.minicolors touchstart.minicolors', '.minicolors-grid, .minicolors-slider, .minicolors-opacity-slider', function(event) {\n            var target = $(this);\n            event.preventDefault();\n            $(document).data('minicolors-target', target);\n            move(target, event, true);\n        })\n        // Move pickers\n        .on('mousemove.minicolors touchmove.minicolors', function(event) {\n            var target = $(document).data('minicolors-target');\n            if( target ) move(target, event);\n        })\n        // Stop moving\n        .on('mouseup.minicolors touchend.minicolors', function() {\n            $(this).removeData('minicolors-target');\n        })\n        // Show panel when swatch is clicked\n        .on('mousedown.minicolors touchstart.minicolors', '.minicolors-swatch', function(event) {\n            var input = $(this).parent().find('.minicolors-input');\n            event.preventDefault();\n            show(input);\n        })\n        // Show on focus\n        .on('focus.minicolors', '.minicolors-input', function() {\n            var input = $(this);\n            if( !input.data('minicolors-initialized') ) return;\n            show(input);\n        })\n        // Update value on blur\n        .on('blur.minicolors', '.minicolors-input', function() {\n            var input = $(this),\n                keywords = input.attr('data-keywords'),\n                settings = input.data('minicolors-settings'),\n                hex,\n                rgba,\n                swatchOpacity;\n\n            if( !input.data('minicolors-initialized') ) return;\n\n            // Get array of lowercase keywords\n            keywords = !keywords ? [] : $.map(keywords.split(','), function(a) {\n                return $.trim(a.toLowerCase());\n            });\n\n            // Set color string\n            if( input.val() !== '' && $.inArray(input.val().toLowerCase(), keywords) > -1 ) {\n                value = input.val();\n            } else {\n                // Get RGBA values for easy conversion\n                if( isRgb(input.val()) ) {\n                    rgba = parseRgb(input.val(), true);\n                } else {\n                    hex = parseHex(input.val(), true);\n                    rgba = hex ? hex2rgb(hex) : null;\n                }\n\n                // Convert to format\n                if( rgba === null ) {\n                    value = settings.defaultValue;\n                } else if( settings.format === 'rgb' ) {\n                    value = settings.opacity ?\n                        parseRgb('rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + input.attr('data-opacity') + ')') :\n                        parseRgb('rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')');\n                } else {\n                    value = rgb2hex(rgba);\n                }\n            }\n\n            // Update swatch opacity\n            swatchOpacity = settings.opacity ? input.attr('data-opacity') : 1;\n            if( value.toLowerCase() === 'transparent' ) swatchOpacity = 0;\n            input\n                .closest('.minicolors')\n                .find('.minicolors-swatch > span')\n                .css('opacity', swatchOpacity);\n\n            // Set input value\n            input.val(value);\n\n            // Is it blank?\n            if( input.val() === '' ) input.val(parseInput(settings.defaultValue, true));\n\n            // Adjust case\n            input.val( convertCase(input.val(), settings.letterCase) );\n\n        })\n        // Handle keypresses\n        .on('keydown.minicolors', '.minicolors-input', function(event) {\n            var input = $(this);\n            if( !input.data('minicolors-initialized') ) return;\n            switch(event.keyCode) {\n                case 9: // tab\n                    hide();\n                    break;\n                case 13: // enter\n                case 27: // esc\n                    hide();\n                    input.blur();\n                    break;\n            }\n        })\n        // Update on keyup\n        .on('keyup.minicolors', '.minicolors-input', function() {\n            var input = $(this);\n            if( !input.data('minicolors-initialized') ) return;\n            updateFromInput(input, true);\n        })\n        // Update on paste\n        .on('paste.minicolors', '.minicolors-input', function() {\n            var input = $(this);\n            if( !input.data('minicolors-initialized') ) return;\n            setTimeout( function() {\n                updateFromInput(input, true);\n            }, 1);\n        });\n\n}));\n",";( function(window) {\n    'use strict';\n\n    /**\n     * Meter constructor\n     *\n     * @param DOM Object el\n     * @param string field\n     */\n    function Meter(el, field, meter) {\n        this.el = el;\n\n        field = field || 'input[type=\"password\"]';\n        meter = meter || '.strength-meter > div';\n\n        this.field = this.el.find(field);\n        this.meter = this.el.find(meter);\n        this._init();\n    }\n\n    // Meter prototype\n    Meter.prototype = {\n        // Initializes meter\n        _init : function() {\n            this.characters = 0;\n            this.capitalletters = 0;\n            this.lowerletters = 0;\n            this.number = 0;\n            this.special = 0;\n\n            this.upperCase = new RegExp('[A-Z]');\n            this.lowerCase = new RegExp('[a-z]');\n            this.numbers = new RegExp('[0-9]');\n            this.specialchars = new RegExp('([!,%,&,@,#,$,^,*,?,_,~,/])');\n\n            var self = this;\n\n            this.field.on('keyup keydown', function() {\n                self._checkStrength($(this).val());\n            });\n        },\n        // Sets meter percentage\n        _setPercentage : function(percentage) {\n            this.meter.css({ 'width' : percentage + '%' });\n        },\n        // Sets meter class\n        _setClass : function(total) {\n            if(total <= 1) {\n                this.meter.removeClass();\n                this.meter.addClass('veryweak');\n            } else if(total === 2) {\n                this.meter.removeClass();\n                this.meter.addClass('weak');\n            } else if(total === 3) {\n                this.meter.removeClass();\n                this.meter.addClass('medium');\n            } else {\n                this.meter.removeClass();\n                this.meter.addClass('strong');\n            }\n        },\n        // Checks strength\n        _checkStrength : function(value) {\n            if (value.length >= 8) { this.characters = 1; } else { this.characters = 0; }\n            if (value.match(this.upperCase)) { this.capitalletters = 1; } else { this.capitalletters = 0; }\n            if (value.match(this.lowerCase)) { this.lowerletters = 1; }  else { this.lowerletters = 0; }\n            if (value.match(this.numbers)) { this.number = 1; }  else { this.number = 0; }\n            if (value.match(this.specialchars)) { this.special = 1; }  else { this.special = 0; }\n\n\n            var total = this._getTotal();\n            var percentage = this._getPercentage(5, total);\n\n            this._setPercentage(percentage);\n\n            this._setClass(total);\n        },\n        // Percentage helper\n        _getPercentage : function(a, b) {\n            return ((b / a) * 100);\n        },\n        // Gets total\n        _getTotal : function() {\n            return this.characters + this.capitalletters + this.lowerletters + this.number + this.special;\n        }\n    };\n\n    // Register meter to window namespace\n    window.Meter = Meter;\n\n})(window);",";( function(window) {\n    'use strict';\n\n    // Constructor\n    function Slug(el) {\n        this.el = el;\n\n        this._init();\n    }\n\n    // Slug prototype\n    Slug.prototype = {\n        // Initialize\n        _init : function() {\n            this.input = this.el.find('input[type=\"text\"]');\n\n            var follow = typeof this.input.data('follows') !== 'undefined' ?\n                this.input.data('follows') :\n                '#title';\n\n            this.follow = $(follow);\n\n            this.dirty = (this.input.val() !== '') ? true : false;\n\n            this._initEvents();\n        },\n        _initEvents : function() {\n            var self = this;\n\n            this.input.on('keyup', function() {\n                self.dirty = true;\n            });\n\n            this.follow.on('keyup', function() {\n                if(!self.dirty) { self._setSlug(); }\n            });\n\n            this.input.on('blur', function() {\n                if(self.input.val() === '') {\n                    self.changed = false;\n                    self._setSlug();\n                }\n            });\n        },\n        // Set slug\n        _setSlug : function() {\n            var slug = this._slugify(this.follow.val());\n\n            this.input.val(slug);\n        },\n        _slugify : function(str) {\n            str = str.replace(/^\\s+|\\s+$/g, '').toLowerCase();\n\n            // Remove accents\n            var from = \"àáäâèéëêıìíïîòóöôùúüûñçğş·/_,:;\", to = \"aaaaeeeeiiiiioooouuuuncgs------\";\n\n            for(var i = 0, l = from.length; i < l; i++) {\n                str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n            }\n\n            return str.replace(/[^a-z0-9 -]/g, '') // Remove invalid chars\n                .replace(/\\s+/g, '-') // Collapse whitespace and replace by -\n                .replace(/-+/g, '-'); // Collapse dashes\n        }\n    };\n\n    window.Slug = Slug;\n\n}) (window);","// Strict definitions\n;(function (window) {\n    'use strict';\n\n    // Tag field constructor\n    function Tag(el) {\n        this.el = el;\n\n        this._init();\n    }\n\n    // Tag prototype\n    Tag.prototype = {\n        // Initialize\n        _init: function () {\n            this.list = this.el.find('ul.taglist');\n            this.inputItem = this.list.find('li.tag-input');\n            this.input = this.inputItem.find('input[name=\"_tag\"]');\n            this.valueInput = this.el.find('input[type=\"hidden\"]');\n\n            this.tags = [];\n\n            this._extractValue();\n\n            this._initEvents();\n        },\n        // Initialize events\n        _initEvents: function () {\n            var self = this;\n\n            this.input.bind('keydown', function (e) {\n                var input = $(this);\n\n                if (e.which === 27) {\n                    e.stopPropagation();\n\n                    if (input.val() === '') {\n                        input.blur();\n                    } else {\n                        input.val('');\n                    }\n\n                } else if (e.which === 9 || e.which === 13 || e.which === 188) {\n                    e.preventDefault();\n\n                    var val = input.val().trim();\n\n                    if (val !== '') {\n                        if (self._addTag(input.val())) {\n                            input.val('');\n                        }\n                    }\n                }\n            });\n\n            // Remove buttons\n            this.list.on('click', '.icon-cancel', function () {\n                self._removeTag($(this));\n            });\n        },\n        // Extracts the current value, generates the list\n        _extractValue: function () {\n            var values = this.valueInput.val().trim();\n\n            if (values !== '') {\n                values = values.split(',');\n\n                for (var i = 0; i < values.length; i++) {\n                    this._addTag(values[i]);\n                }\n            }\n\n            this._setListClass(this.tags);\n        },\n        // Removes an item\n        _removeTag: function (tag) {\n            var parent = tag.parents('.tag');\n\n            delete this.tags[parent.data('id')];\n\n            parent.remove();\n\n            this._setValue();\n        },\n        // Adds an item\n        _addTag: function (str) {\n            var i = this.tags.indexOf(str);\n\n            if (i > -1) {\n                var duplicate = this.list.find('li[data-id=\"' + i + '\"]');\n\n                duplicate.addClass('flash');\n\n                setTimeout(function () {\n                    duplicate.removeClass('flash');\n                }, 100);\n\n                return false;\n            } else {\n                this.tags.push(str);\n\n                i = this.tags.indexOf(str);\n\n                this._createTag(i, str);\n\n                this._setValue();\n\n                return true;\n            }\n        },\n        // Creates a tag and appends to list\n        _createTag: function (id, str) {\n            $('<li class=\"tag\" data-id=\"' + id + '\">' + html_entities(str) + '<i class=\"icon-cancel\"></i></li>').insertBefore(this.inputItem);\n        },\n        // Sets the value input\n        _setValue: function () {\n            var clean = $.grep(this.tags, function (n) {\n                return (n);\n            });\n\n            this.valueInput.val(clean.join(','));\n\n            this._setListClass(clean);\n        },\n        // Sets the list class\n        _setListClass: function (tags) {\n            if (tags.length === 0) {\n                this.list.addClass('empty');\n            } else {\n                this.list.removeClass('empty');\n            }\n        }\n    };\n\n    // Register to window namespace\n    window.Tag = Tag;\n\n})(window);",";(function (window) {\n    'use strict';\n\n    // Uploader Constructor\n    function Uploader(zone, options) {\n        this._init(zone, options);\n    }\n\n    // Uploader\n    Uploader.prototype = {\n        /**\n         * Constructor\n         *\n         * @param DOM Object\n         * @param array\n         */\n        _init: function (self, options) {\n            this.zone = self;\n\n            var defaults = {\n                selectButton: '#dropzone-select-button',\n                uploadInput: '#dropzone-file',\n                outputList: '#upload-list',\n                indicator: null,\n                enabled: true,\n                append: true\n            };\n\n            this.options = $.extend(defaults, options);\n            this.action = $(this.zone).attr('action');\n\n            this.fileQueue = [];\n            this.statusIndicators = [];\n            this.current = 0;\n            this.inProcess = false;\n\n            this.maxsize = this.zone.data('maxsize');\n\n            this._initEvents();\n        },\n        /**\n         * Binds events\n         */\n        _initEvents: function () {\n            var self = this;\n\n            // Class binds\n            this.zone.bind(\"dragenter, dragover\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                $(this).addClass('dragenter');\n            });\n\n            this.zone.bind(\"dragleave\", function () {\n                $(this).removeClass('dragenter');\n            });\n\n            // Disable window drop\n            $(window).bind('drop', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            // Bind file drop\n            this.zone.bind(\"drop\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                self.queue(e.originalEvent.dataTransfer.files);\n\n                $(this).removeClass('dragenter');\n            });\n\n            // Bind input change\n            $(this.options.uploadInput).bind(\"change\", function () {\n                self.queue($(this)[0].files);\n            });\n\n            // Bind optional select button if exists\n            if (this.options.selectButton !== false) {\n                $(this.options.selectButton).bind(\"click\", function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    $(self.options.uploadInput).click();\n                });\n            }\n        },\n        /**\n         * Adds new files to the queue\n         *\n         * @param array\n         */\n        queue: function (files) {\n            if (!this.options.enabled) {\n                return false;\n            }\n\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size < this.maxsize) {\n\n                    var fd = new FormData();\n                    fd.append('file', files[i]);\n\n                    this.fileQueue.push(fd);\n\n                    // Escape the file name in order to prevent XSS\n                    var indicator = this._createIndicator(html_entities(files[i].name), files[i].size);\n\n                    this.statusIndicators.push(indicator);\n\n                    if (this.options.outputList !== false) {\n                        if (this.options.append === true) {\n                            $(this.options.outputList).append(indicator.parent);\n                        } else {\n                            $(this.options.outputList).prepend(indicator.parent);\n                        }\n\n                    }\n                }\n            }\n\n            if (this.inProcess === false) {\n                this._upload();\n            }\n        },\n        /**\n         * Creates an upload indicator\n         */\n        _createIndicator: function(name, size)\n        {\n            var className = (!this.options.indicator) ? 'Indicator' : this.options.indicator;\n\n            className = window[className];\n\n            return new className(name, size);\n        },\n        /**\n         * Iterates through queue and uploads files\n         */\n        _upload: function () {\n            var self = this;\n\n            if (this.current < this.fileQueue.length) {\n                this.inProcess = true;\n\n                var fd = this.fileQueue[this.current],\n                    indicator = this.statusIndicators[this.current];\n\n                $.ajax({\n                        xhr: function () {\n                            var xhrobj = $.ajaxSettings.xhr();\n\n                            if (xhrobj.upload) {\n                                xhrobj.upload.addEventListener('progress', function (e) {\n                                    indicator.setProgress(loaded(e));\n                                });\n                            }\n\n                            return xhrobj;\n                        },\n\n                        url: self.action,\n                        type: 'POST',\n                        contentType: false,\n                        processData: false,\n                        cache: false,\n                        data: fd,\n\n                        success: function (data) {\n                            indicator.complete(data);\n                        }\n                    })\n                    .always(function () {\n                        self.current++;\n                        self._upload();\n                    });\n\n            } else {\n                this.inProcess = false;\n            }\n        }\n    };\n\n    window.Uploader = Uploader;\n\n\n    // Indicator Constructor\n    function Indicator(name, size) {\n        this._init(name, size);\n    }\n\n    // Indicator\n    Indicator.prototype = {\n        /**\n         * Constructor\n         *\n         * @param string\n         * @param int\n         */\n        _init: function (name, size) {\n            // Parent\n            this.parent = $('<li class=\"material-light\"></li>');\n            // Progress bar\n            this.progressContainer = $('<div class=\"upload-progress-container\"></div>').appendTo(this.parent);\n            this.progressBar = $('<div class=\"upload-progress-bar\"></div>').appendTo(this.progressContainer);\n\n            // Indicator wrapper\n            this.messageWrapper = $('<div class=\"upload-message-wrapper\"></div>').appendTo(this.parent);\n\n            // Icon\n            this.thumbnail = $('<span class=\"upload-thumbnail\"></span>').appendTo(this.messageWrapper);\n            // Container\n            this.container = $('<p></p>').appendTo(this.messageWrapper);\n            // File name\n            this.filename = $('<span class=\"upload-text\">' + name + '</span>').appendTo(this.container);\n            // File size / Message\n            this.message = $('<span class=\"upload-text muted\">' + readable_size(size) + '</span>').appendTo(this.container);\n\n            // Clone filename and message\n            this.container.clone().appendTo(this.progressContainer);\n        },\n        /**\n         * Set the progressbar width\n         *\n         * @param int\n         */\n        setProgress: function (percent) {\n            this.progressBar.width(percent.toString() + \"%\");\n        },\n        /**\n         * Takes action on the completed upload\n         *\n         * @param json\n         */\n        complete: function (reply) {\n            this.setProgress(100);\n\n            if (reply.type === 'success') {\n                this._success(reply.response);\n            } else if (reply.type === 'error') {\n                this._error(reply);\n            }\n        },\n        /**\n         * Makes the UI changes when upload is completed\n         *\n         * @param json string\n         */\n        _success: function (data) {\n            $(this.parent).addClass('complete');\n\n            this.thumbnail.html(data.thumbnail);\n\n            this.message.html(data.mimetype + ' | ' + this.message.text());\n        },\n        /**\n         * Makes the UI changes when upload returns error\n         *\n         * @param json string\n         */\n        _error: function (data) {\n            $(this.parent).addClass('error');\n\n            $(this.thumbnail).html('<i class=\"icon-cancel\"></i>');\n\n            $(this.message).html(data.response);\n        }\n    };\n\n    // Register indicator to the window namespace\n    window.Indicator = Indicator;\n\n})(window);",";(function (window) {\n    'use strict';\n\n    /**\n     * Library constructor\n     *\n     * @param DOM Object\n     */\n    function Library(el) {\n        this.container = el;\n\n        this._init();\n    }\n\n    // Prototype\n    Library.prototype = {\n        // Initialize\n        _init: function () {\n            this.retrieveURL = this.container.data('retrieveurl');\n\n            this.modal = this.container.find('#library-modal');\n            this.scroller = this.modal.find('#library-modal-columns');\n            this.mediaList = $('#library-modal-media-list');\n\n            this.searchForm = this.modal.find('#library-modal-search');\n            this.noResults = this.modal.find('#library-modal-noresults');\n            this.disabler = this.modal.find('#library-modal-disabler');\n\n            this.mediaDetails = this.modal.find('#library-modal-media-detail');\n            this.gallerySortable = this.modal.find('#library-modal-gallery-sortable');\n            this.numSelected = this.modal.find('#library-modal-gallery-selected > span');\n\n            this.clearButton = this.modal.find('#library-modal-clear');\n            this.removeButton = this.modal.find('#library-modal-remove');\n            this.insertButton = this.modal.find('#library-modal-insert');\n            this.closeButton = this.modal.find('#library-modal-close');\n\n            this.dropzone = this.container.find('#library-modal-dropzone');\n\n            this.controller = null;\n            this.isOpen = false;\n            this.isRetrieved = false;\n            this.mode = null;\n            this.masterFilter = null;\n            this.lastValue = null;\n            this.uploadIndicators = [];\n            this.controllerDirty = false;\n\n            // Create dialog\n            this.dialog = new Modal($('#library-modal-container'));\n\n            // Create uploader\n            this.uploader = new Uploader($('#library-modal-dropzone'), {\n                outputList: this.mediaList,\n                enabled: false,\n                append: false,\n                indicator: 'LibraryIndicator'\n            });\n\n            this._disableList();\n\n            this._initEvents();\n        },\n        // Initialize events\n        _initEvents: function () {\n            // Cache self\n            var self = this;\n\n            // Scrollers\n            this.scroller.find('.library-modal-scroll-button').on('click', function () {\n                // Check direction\n                if ($(this).hasClass('right')) {\n                    self.scroller.addClass('scrolled');\n                } else if ($(this).hasClass('left')) {\n                    self.scroller.removeClass('scrolled');\n                }\n            });\n\n            // Stop propagation for the library-modal\n            this.modal.on('click', function (e) {\n                e.stopPropagation();\n            });\n\n            // Clear button\n            this.clearButton.on('click', function (e) {\n                self._clearGallery();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            // Remove button\n            this.removeButton.on('click', function () {\n                self._deselectDocument();\n\n                self.controller.setValue(null);\n\n                self.close();\n            });\n\n            // Search\n            this.searchForm.on('submit', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                if (!$(this).hasClass('disabled')) {\n                    var search = $(this).find('input[name=\"q\"]');\n\n                    var keywords = search.val();\n\n                    self._search(keywords);\n                }\n            });\n\n            // Search input keypress\n            this.searchForm.find('input[type=\"search\"]').bind('keydown', function (e) {\n                if (e.keyCode === 27) {\n                    e.stopPropagation();\n                    if ($(this).val() === '') {\n                        $(this).blur();\n                    } else {\n                        self._search('');\n                    }\n                }\n            });\n\n            // Sortable\n            this.gallerySortable.sortable({\n                cursor: 'move',\n                tolerance: 'pointer',\n                placeholder: 'placeholder',\n                opacity: 0.7,\n                delay: 50,\n                scroll: false\n            }).disableSelection();\n\n            // Sortable remove\n            this.gallerySortable.on('click', '.library-modal-sortable-remove', function (e) {\n                var parent = $(this).parent();\n\n                self._deselectGallery($('#md_' + parent.data('id')));\n\n                parent.remove();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            // Dragenter, dragover\n            this.container.on(\"dragenter, dragover\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                self.dropzone.addClass('dragenter');\n            });\n\n            // Dragleave\n            this.dropzone.on(\"dragleave\", function () {\n                $(this).removeClass('dragenter');\n            });\n\n            // Call upload handler\n            this.dropzone.on(\"drop\", function (e) {\n                e.preventDefault();\n\n                $(this).removeClass('dragenter');\n            });\n\n            // Close button\n            this.closeButton.on(\"click\", function () {\n                self.close();\n            });\n        },\n        // Initialize\n        run: function (controller) {\n            if (!this.isRetrieved) {\n                // We do not store controller here since we don't want\n                // conflicts when this mode runs again after retrieval\n                this._setMode(controller.type);\n\n                this._reset();\n\n                this._retrieve(controller);\n            } else {\n                if (this.controller !== controller) {\n                    this.controller = controller;\n\n                    this._setMode(controller.type);\n\n                    this.controllerDirty = true;\n\n                    this._reset();\n                }\n\n                this._initByMode();\n            }\n\n            this.open();\n        },\n        // Displays by controller value/options\n        _initByMode: function () {\n            if (this.mode === 'gallery') {\n                this._initGallery();\n            } else {\n                this._initDocument();\n            }\n        },\n        // Init gallery\n        _initGallery: function () {\n            // Do this bit if the controller is not the same\n            if (this.controllerDirty === true) {\n                var self = this;\n\n                this._setMasterFilter('image');\n\n                this.mediaList.unbind('click').on('click', 'li', function () {\n                    self._selectForGallery($(this));\n                });\n\n                this.insertButton.unbind('click').on('click', function () {\n                    self.controller.setValue(self._parseForGallery());\n\n                    self.close();\n                });\n\n                this.controllerDirty = false;\n            }\n\n            var mediaIds = this.controller.getValue();\n\n            // If the last value has changed reinit\n            if (this.isRetrieved && this.lastValue !== mediaIds) {\n                this.lastValue = mediaIds;\n\n                this._clearGallery();\n\n                // Take action if not empty\n                if (mediaIds !== '' && mediaIds.length > 0) {\n                    mediaIds = JSON.parse(mediaIds);\n\n                    for (var i = mediaIds.length - 1; i >= 0; i--) {\n                        var media = $('#md_' + mediaIds[i]);\n\n                        if (media.length > 0) {\n                            this._selectGallery(media);\n                        }\n                    }\n                }\n\n                this._recalculateSelected();\n            }\n        },\n        // Init document\n        _initDocument: function () {\n            // Do this bit if the controller is not the same\n            if (this.controllerDirty === true) {\n                var self = this;\n\n                if (typeof this.controller.filter !== 'undefined') {\n                    this._setMasterFilter(this.controller.filter);\n                }\n\n                this.mediaList.unbind('click').on('click', 'li', function () {\n                    self._selectForDocument($(this));\n                });\n\n                this.insertButton.unbind('click').on('click', function () {\n                    self.controller.setValue(self._parseForDocument());\n\n                    self.close();\n                });\n\n                this.controllerDirty = false;\n            }\n\n            var mediaId = this.controller.getValue();\n\n            // If the last value has changed reinit\n            if (this.isRetrieved && this.lastValue !== mediaId) {\n                this.lastValue = mediaId;\n\n                var media = $('#md_' + mediaId);\n\n                if (media.length > 0) {\n                    this._selectDocument(media);\n                } else {\n                    this._deselectDocument();\n                }\n            }\n        },\n        // Selects media depending on the mode\n        selectMediaById: function (id) {\n            var media = $('#md_' + id);\n\n            if (media.length > 0) {\n                // Select depending on mode\n                if (this.mode === 'gallery') {\n                    this._selectForGallery(media);\n                } else {\n                    this._selectForDocument(media);\n                }\n            }\n        },\n        // Select media\n        _selectForDocument: function (media) {\n            // Return if it has indicator\n            if (media.hasClass('indicator')) {\n                return false;\n            }\n\n            // Take action depending on the selected condition\n            if (media.hasClass('selected')) {\n                this._deselectDocument();\n            } else {\n                this._selectDocument(media);\n            }\n        },\n        // Selects document\n        _selectDocument: function (media) {\n            this.mediaList.children('li.selected').removeClass('selected');\n            media.addClass('selected');\n            this.mediaDetails.addClass('selected');\n\n            this.mediaDetails.data('id', media.data('id'));\n\n            var tag = this.mediaDetails.children('.library-modal-media-tag'),\n                name = tag.find('.media-name'),\n                detail = tag.find('.media-detail'),\n                thumbnail = tag.find('.media-thumbnail');\n\n            name.text(media.data('name'));\n\n            if (isNaN(media.data('size')) || media.data('size') == '0') {\n                var details = media.data('mimetype');\n            } else {\n                var details = media.data('mimetype') + ' | ' + readable_size(media.data('size'));\n            }\n\n            detail.text(details);\n\n            thumbnail.html(media.find('.document-thumbnail').clone());\n        },\n        // Deselects document\n        _deselectDocument: function () {\n            this.mediaList.children('li.selected').removeClass('selected');\n            this.mediaDetails.removeClass('selected');\n\n            this.mediaDetails.data('id', '');\n        },\n        // Select media for gallery\n        _selectForGallery: function (media) {\n            if (media.hasClass('indicator') || media.hasClass('filtered')) {\n                return false;\n            }\n\n            if (media.hasClass('selected')) {\n                this._deselectGallery(media);\n            } else {\n                this._selectGallery(media);\n            }\n\n            this._recalculateSelected();\n        },\n        // Selects media for gallery\n        _selectGallery: function (media) {\n            media.addClass('selected');\n\n            var thumbnail = $('<li data-id=\"' + media.data('id') + '\" id=\"gl_' + media.data('id') + '\"></li>');\n\n            $('<img src=\"' + media.find('img').attr('src') + '\">').appendTo(thumbnail);\n\n            $('<i class=\"icon-cancel library-modal-sortable-remove\"></i>').appendTo(thumbnail);\n\n            this.gallerySortable.prepend(thumbnail);\n        },\n        // Deselects media for gallery\n        _deselectGallery: function (media) {\n            media.removeClass('selected');\n\n            this.gallerySortable.find('#gl_' + media.data('id')).remove();\n\n            this._recalculateSelected();\n        },\n        _clearGallery: function () {\n            this.mediaList.children('li.selected').removeClass('selected');\n\n            this.gallerySortable.empty();\n\n            this.numSelected.text(0);\n        },\n        // Recalculates the number of selected media\n        _recalculateSelected: function () {\n            var selected = this.gallerySortable.children('li').length;\n\n            this.numSelected.text(selected);\n        },\n        // Parse media\n        _parseMedia: function (id) {\n            var media = $('#md_' + id);\n\n            if (media.length > 0) {\n                return {\n                    'id': id,\n                    'name': media.data('name'),\n                    'thumbnail': media.find('.document-thumbnail').children('img,i').clone()\n                };\n            } else {\n                return null;\n            }\n        },\n        // Parse for document\n        _parseForDocument: function () {\n            var id = this.mediaDetails.data('id');\n\n            return this._parseMedia(id);\n        },\n        // Parse for gallery\n        _parseForGallery: function () {\n            var array = [];\n\n            var gallery = this.gallerySortable.children('li');\n\n            for (var i = 0; i < gallery.length; i++) {\n                var id = gallery.eq(i).data('id');\n                // Push into array\n                array.push(this._parseMedia(id));\n            }\n\n            return array;\n        },\n        // Open\n        open: function () {\n            this.dialog.openModal();\n        },\n        // Open\n        close: function () {\n            this.dialog.closeModal();\n        },\n        _setMode: function (mode) {\n            this.mode = mode;\n\n            this.container.removeClass('library-modal-mode-gallery library-modal-mode-document');\n\n            this.container.addClass('library-modal-mode-' + mode);\n        },\n        // Sets the master filter\n        _setMasterFilter: function (key) {\n            this.masterFilter = key;\n\n            this._filter(key);\n        },\n        // Refilter (useful when new uploaded files arrive)\n        refilter: function () {\n            this._filter(\n                this.masterFilter\n            );\n        },\n        // Resets library modal\n        _reset: function () {\n            this.masterFilter = null;\n\n            this._deselectDocument();\n\n            this._clearGallery();\n\n            this.mediaList.children('li').removeClass();\n        },\n        // Retrieves the media\n        _retrieve: function (controller) {\n            var self = this;\n\n            $.getJSON(this.retrieveURL, function (data) {\n                self._populateList(data);\n\n                self.isRetrieved = true;\n\n                self._enableList();\n\n                self._enableUploader();\n\n                self.run(controller);\n            });\n        },\n        // Populates the media list\n        _populateList: function (data) {\n            for (var i = 0; i < data.length; i++) {\n                var media = data[i];\n\n                this.mediaList.prepend(this.createMediaThumbnail(media));\n            }\n        },\n        createMediaThumbnail: function (media) {\n            var thumbnail = $('<li data-id=\"' + media.id + '\" ' +\n                'id=\"md_' + media.id + '\" data-name=\"' + html_entities(media.name) + '\" ' +\n                'data-flag=\"' + media.type + '\" data-size=\"' + media.size + '\" ' +\n                'data-mimetype=\"' + media.mimetype + '\">');\n\n            $('<div class=\"document-thumbnail\">' + media.thumbnail + '</div>').appendTo(thumbnail);\n\n            $('<p>' + html_entities(media.name) + '</p>').appendTo(thumbnail);\n\n            $('<i class=\"icon-check\"></i>').appendTo(thumbnail);\n\n            return thumbnail;\n        },\n        // Enables list\n        _enableList: function () {\n            this.disabler.removeClass('active');\n\n            this.searchForm.removeClass('disabled');\n        },\n        // Disable list\n        _disableList: function () {\n            this.disabler.addClass('active');\n\n            this.searchForm.addClass('disabled');\n        },\n        // Filter items by key\n        _filter: function (key) {\n            if (!key || key === 'all') {\n                this.mediaList.children('li').removeClass('filtered');\n            } else {\n                this.mediaList.children('li').addClass('filtered');\n                this.mediaList.children('li[data-flag=\"' + key + '\"]').removeClass('filtered');\n            }\n\n            this._anyResults();\n        },\n        // Makes a search\n        _search: function (keywords) {\n            if (keywords.trim() === \"\") {\n                this.mediaList.children('li').removeClass('searched');\n\n                this._anyResults();\n            } else {\n                var self = this;\n\n                this._yesResults();\n\n                var formData = new FormData();\n                formData.append('q', keywords);\n\n                this.mediaList.children('li').addClass('searched');\n\n                this._disableList();\n\n                $.ajax({\n                    url: self.searchForm.attr('action'),\n                    type: \"POST\",\n                    contentType: false,\n                    processData: false,\n                    cache: false,\n                    data: formData,\n                    success: function (data) {\n                        if (data !== '') {\n                            var selector = '#md_' + data.join(',#md_');\n\n                            $(selector).removeClass('searched');\n                        }\n\n                        self._enableList();\n\n                        self._anyResults();\n                    }\n                });\n            }\n        },\n        // Displays no results notification if there are no results\n        _anyResults: function () {\n            if (this.isRetrieved) {\n                if (this.mediaList.find('li').length === this.mediaList.find('.searched,.filtered').length) {\n                    this.noResults.addClass('active');\n                } else {\n                    this.noResults.removeClass('active');\n                }\n            }\n        },\n        // Forces hide no results notification\n        _yesResults: function () {\n            this.noResults.removeClass('active');\n        },\n        // Enables uploader\n        _enableUploader: function () {\n            this.uploader.options.enabled = true;\n        }\n    };\n\n    // Register to window namespace\n    window.Library = Library;\n\n    // LibraryIndicator Constructor\n    function LibraryIndicator(name, size) {\n        this._init(name);\n\n        this.app = window.documentsLibrary;\n    }\n\n    // Inherit from Indicator\n    LibraryIndicator.prototype = Indicator.prototype;\n\n    // Overload Indicator _init\n    LibraryIndicator.prototype._init = function (name) {\n        this.parent = $('<li class=\"indicator\"></li>');\n\n        this.thumbnail = $('<div class=\"document-thumbnail\"></div>');\n        this.thumbnail.appendTo(this.parent);\n\n        this.name = $('<p>' + name + '</p>');\n        this.name.appendTo(this.parent);\n\n        $('<i class=\"icon-check\"></i>').appendTo(this.parent);\n\n        this.progressBar = $('<div class=\"progress\"></div>');\n        this.progressBar.appendTo(this.thumbnail);\n    };\n\n    // Overload Indicator _error\n    LibraryIndicator.prototype._error = function (data) {\n        this.parent.remove();\n    };\n\n    // Overload Indicator _success\n    LibraryIndicator.prototype._success = function (data) {\n        this.parent.removeClass('indicator');\n\n        this.parent.attr('data-id', data.id);\n        this.parent.attr('id', 'md_' + data.id);\n        this.parent.attr('data-name', html_entities(data.name));\n        this.parent.attr('data-flag', data.type);\n        this.parent.attr('data-size', data.size);\n        this.parent.attr('data-mimetype', data.mimetype);\n\n        this.thumbnail.html(data.thumbnail);\n\n        // Refilter the app\n        this.app.refilter();\n\n        // Select new uploaded media\n        this.app.selectMediaById(data.id);\n    };\n\n    // Overload Indicator setProgress\n    LibraryIndicator.prototype.setProgress = function (percentage) {\n        percentage = percentage.toString() + '%';\n\n        this.progressBar.height(percentage).width(percentage);\n    };\n\n    // Register indicator to the window namespace\n    window.LibraryIndicator = LibraryIndicator;\n\n})(window);",";( function(window) {\n    'use strict';\n\n    /**\n     * Gallery constructor\n     *\n     * @param DOM Object\n     */\n    function Gallery(el, library) {\n        this.type = 'gallery';\n\n        this.el = el;\n        this.library = library;\n\n        this.container = this.el.find('.form-media-container');\n\n        this.input = this.el.find('input[type=\"hidden\"]');\n\n        this.addButton = this.el.find('.button-add');\n        this.clearButton = this.el.find('.button-clear');\n\n        this.mediaGallery = this.el.find('.form-media-gallery');\n\n        this._initEvents();\n    }\n\n    // Prototype\n    Gallery.prototype = {\n        // Bind events\n        _initEvents : function() {\n            var self = this;\n\n            $(this.mediaGallery).sortable({\n                cursor : 'move',\n                tolerance : 'pointer',\n                placeholder : 'placeholder',\n                opacity : 0.7,\n                delay: 50,\n                stop : function() { self._setGallery(); }\n            }).disableSelection();\n\n            // Bind events for non touch screens\n            if(!Modernizr.touch) {\n                this.mediaGallery.find('.icon-cancel').on('click', function() {\n                    var parent = $(this).parent();\n\n                    $(parent).remove();\n\n                    self._setGallery();\n                });\n            }\n\n            this.clearButton.on('click', function(e) {\n                self._clearGallery();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            this.addButton.on('click', function(e) {\n                self.library.run(self);\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        },\n        _clearGallery: function() {\n            this.input.val('');\n\n            this.mediaGallery.html('');\n\n            this.container.addClass('empty');\n        },\n        // Parses gallery string\n        _parseGallery : function() {\n            var array = $(this.mediaGallery).sortable('toArray', {attribute: 'data-id'});\n\n            return JSON.stringify(array);\n        },\n        // Sets gallery string\n        _setGallery : function() {\n            this.input.val(this._parseGallery());\n        },\n        // Returns the current value\n        getValue : function() {\n            return this.input.val();\n        },\n        // Sets the value\n        setValue : function(gallery) {\n            this._clearGallery();\n            // Check length\n            if(gallery.length > 0) {\n                this.container.removeClass('empty');\n\n                this.mediaGallery.html('');\n\n                var array = [];\n\n                for(var i = 0; i < gallery.length; i++) {\n                    array.push(gallery[i].id);\n\n                    this._createThumbnail(gallery[i]);\n                }\n\n                this.input.val(JSON.stringify(array));\n            }\n        },\n        // Create a new thumbnail\n        _createThumbnail : function(media) {\n            var thumbnail = $('<li data-id=\"' + media.id + '\"><i class=\"icon-cancel\"></i></li>');\n\n            $('<img src=\"' + media.thumbnail.attr('src') + '\" alt=\"' + html_entities(media.name) + '\">').appendTo(thumbnail);\n\n            this.mediaGallery.append(thumbnail);\n        }\n    };\n\n    window.Gallery = Gallery;\n\n})(window);\n\n// Run when document is loaded\n$(document).ready(function() {\n\n    // Run for all\n    $('.nc-form-gallery').each(function() {\n        var gallery = new Gallery($(this), App);\n    });\n\n});",";(function (window) {\n    'use strict';\n\n    /**\n     * Document constructor\n     *\n     * @param DOM Object\n     */\n    function Document(el, library) {\n        this.type = 'document';\n\n        this.el = el;\n        this.library = library;\n\n        this.container = this.el.find('.form-media-container');\n\n        this.input = this.el.find('input[type=\"hidden\"]');\n\n        this.addButton = this.el.find('.button-add');\n        this.removeButton = this.el.find('.button-clear');\n\n        this.thumbnail = this.el.find('.form-document-thumbnail span');\n        this.fileName = this.el.find('.form-document-name');\n\n        this.filter = this.el.data('filter');\n\n        this._initEvents();\n    }\n\n    // Prototype\n    Document.prototype = {\n        // Bind events\n        _initEvents: function () {\n            var self = this;\n\n            this.removeButton.on('click', function (e) {\n                self._removeDocument();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            // Bind open\n            this.addButton.on('click', function (e) {\n                self.library.run(self);\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        },\n        // Remove file\n        _removeDocument: function () {\n            this.input.val('');\n\n            this.thumbnail.attr('src', '');\n\n            this.fileName.text('');\n\n            this.container.addClass('empty');\n        },\n        // Returns the current value\n        getValue: function () {\n            return this.input.val();\n        },\n        // Sets the value\n        setValue: function (media) {\n            if (media !== null) {\n                this.container.removeClass('empty');\n\n                this.input.val(media.id);\n\n                this.fileName.text(media.name);\n\n                this.thumbnail.html(media.thumbnail);\n            } else {\n                this._removeDocument();\n            }\n        }\n    };\n\n    // Register to window namespace\n    window.Document = Document;\n\n})(window);",";(function (window) {\n    'use strict';\n\n    // Editor constructor\n    function Editor(el, library, dialog) {\n        this._init(el, library, dialog);\n    }\n\n    // Editor app\n    Editor.prototype = {\n\n        /**\n         * Initialises app\n         *\n         * @param DOM\n         */\n        _init: function (el, library, dialog) {\n            this.el = el;\n            this.text = this.el.find('textarea');\n            this.library = library;\n            this.dialog = dialog;\n\n            this.toolbar = this.el.find('.markdown-editor-toolbar');\n\n            this._controls();\n\n            this._initEvents();\n        },\n\n        /**\n         * Initialises the events for the editor\n         */\n        _initEvents: function () {\n            var self = this;\n\n            // Resize the textarea\n            this.text.height('auto');\n            this.text.height(this.text.prop('scrollHeight') + 'px');\n\n            // Bind resize events\n            this.text.on('change', function (e) {\n                self.resize(e);\n            });\n            this.text.on('cut paste drop keydown', function (e) {\n                self.delayedResize(e);\n            });\n            $(window).resize(function (e) {\n                self.delayedResize(e);\n            });\n\n            // Bind tabbing\n            this.text.on('keydown', function (e) {\n                if (e.keyCode === 9) {\n                    e.stopPropagation();\n                    e.preventDefault();\n\n                    if (e.shiftKey && e.keyCode === 9) {\n                        self.flush(e);\n                    } else {\n                        self.indent(e);\n                    }\n                }\n            });\n\n            // Set tool clicks\n            this.toolbar.on('click', '.toolset li', function (e) {\n                var method = $(this).data('method');\n\n                if (self.controls[method]) {\n                    self.controls[method]();\n                }\n\n                self.delayedResize(e);\n\n                return false;\n            });\n        },\n\n        /**\n         * Returns the gallery controller\n         */\n        _getGalleryController: function () {\n            return new EditorGallery(this, this.library);\n        },\n\n        /*\n         * Returns the document controller\n         */\n        _getDocumentController: function () {\n            return new EditorDocument(this, this.library);\n        },\n\n        /**\n         * Resizes the textarea for each line\n         */\n        resize: function (e) {\n            var bodyScrollPos = $('body').prop('scrollTop');\n            this.text.height('auto');\n            this.text.height(this.text.prop('scrollHeight') + 'px');\n            $('body').prop('scrollTop', bodyScrollPos);\n        },\n\n        /* 0-timeout to get the already changed text */\n        delayedResize: function (e) {\n            var self = this;\n            var timeout = setTimeout(function () {\n                self.resize(e);\n            }, 0);\n        },\n\n        /**\n         * Inserts string at the cursor\n         *\n         * @param string\n         */\n        insert: function (str) {\n            var element = this.text[0];\n\n            var start = element.selectionStart;\n            var value = element.value;\n\n            element.value = value.substring(0, start) + str + value.substring(start);\n\n            element.selectionStart = element.selectionEnd = start + str.length;\n        },\n\n        /**\n         * Removes selected string\n         */\n        deleteSelection: function () {\n            var element = this.text[0];\n\n            var start = element.selectionStart, end = element.selectionEnd;\n            var value = element.value;\n\n            element.value = value.substring(0, start) + value.substring(end);\n        },\n\n        /**\n         * Wraps selection with given params\n         */\n        wrap: function (left, right) {\n            var element = this.text[0];\n\n            var start = element.selectionStart, end = element.selectionEnd;\n            var value = element.value;\n\n            element.value = value.substring(0, start) + left + value.substring(start, end) + right + value.substring(end);\n\n            element.selectionStart = end + left.length + right.length;\n        },\n\n        /**\n         * Tabs all lines in the selection\n         */\n        indent: function (e) {\n            var element = this.text[0];\n\n            var start = element.selectionStart, end = element.selectionEnd;\n            var value = element.value;\n\n            var selections = value.substring(start, end).split(\"\\n\");\n\n            for (var i = 0; i < selections.length; i++) {\n                selections[i] = \"\\t\" + selections[i];\n            }\n\n            element.value = value.substring(0, start) + selections.join(\"\\n\") + value.substring(end);\n\n            if (end > start) {\n                element.selectionStart = start;\n                element.selectionEnd = end + selections.length;\n            } else {\n                element.selectionStart = element.selectionEnd = start + 1;\n            }\n        },\n        /**\n         * Untabs all lines in the selection\n         */\n        flush: function (e) {\n            var element = this.text[0];\n\n            var start = element.selectionStart, end = element.selectionEnd;\n            var value = element.value;\n\n            var pattern = new RegExp(/^[\\t]{1}/);\n\n            var edits = 0;\n\n            if (start === end) {\n                while (start > 0) {\n                    if (value.charAt(start) === \"\\n\") {\n                        start++;\n                        break;\n                    }\n\n                    start--;\n                }\n\n                var portion = value.substring(start, end);\n                var matches = portion.match(pattern);\n\n                if (matches) {\n                    element.value = value.substring(0, start) + portion.replace(pattern, '') + value.substring(end);\n                    end--;\n                }\n\n                element.selectionStart = element.selectionEnd = end;\n            } else {\n                var selections = value.substring(start, end).split(\"\\n\");\n\n                for (var i = 0; i < selections.length; i++) {\n                    if (selections[i].match(pattern)) {\n                        edits++;\n                        selections[i] = selections[i].replace(pattern, '');\n                    }\n                }\n\n                element.value = value.substring(0, start) + selections.join(\"\\n\") + value.substring(end);\n\n                element.selectionStart = start;\n                element.selectionEnd = end - edits;\n            }\n        },\n\n        /**\n         * Sets the editor controls\n         */\n        _controls: function () {\n            var self = this;\n\n            this.controls = {\n                bold: function () {\n                    self.wrap('**', '**');\n                },\n                italic: function () {\n                    self.wrap('*', '*');\n                },\n                code: function () {\n                    self.wrap('`', '`');\n                },\n                link: function () {\n                    var element = self.text[0];\n\n                    var start = element.selectionStart, end = element.selectionEnd;\n                    var value = element.value;\n\n                    var selection = value.substring(start, end);\n\n                    self.dialog.run(self, 'link');\n\n                    self.dialog.urlInput.val(selection);\n                },\n                list: function () {\n                    var element = self.text[0];\n\n                    var start = element.selectionStart, end = element.selectionEnd;\n                    var value = element.value;\n\n                    var selections = value.substring(start, end).split(\"\\n\");\n\n                    for (var i = 0; i < selections.length; i++) {\n                        selections[i] = '* ' + selections[i];\n                    }\n\n                    element.value = value.substring(0, start) + \"\\n\" + selections.join(\"\\n\") + \"\\n\" + value.substring(end);\n                },\n                quote: function () {\n                    var element = self.text[0];\n\n                    var start = element.selectionStart, end = element.selectionEnd;\n                    var value = element.value;\n\n                    var selections = value.substring(start, end).split(\"\\n\");\n\n                    for (var i = 0; i < selections.length; i++) {\n                        selections[i] = '> ' + selections[i];\n                    }\n\n                    element.value = value.substring(0, start) + selections.join(\"\\n\") + value.substring(end);\n                },\n                heading: function () {\n                    self.wrap('###', '');\n                },\n                hrule: function () {\n                    var element = self.text[0];\n\n                    var start = element.selectionStart, end = element.selectionEnd;\n                    var value = element.value;\n\n                    var ruler = '\\n***\\n';\n\n                    element.value = value.substring(0, start) + ruler + value.substring(end);\n\n                    element.selectionStart = element.selectionEnd = end + ruler.length;\n                },\n                readmore: function () {\n                    var element = self.text[0];\n\n                    var start = element.selectionStart, end = element.selectionEnd;\n                    var value = element.value;\n\n                    var readmore = '\\n![READMORE]!\\n';\n\n                    element.value = value.substring(0, start) + readmore + value.substring(end);\n\n                    element.selectionStart = element.selectionEnd = end + readmore.length;\n                },\n                media: function () {\n                    var element = self.text[0];\n\n                    var start = element.selectionStart, end = element.selectionEnd;\n                    var value = element.value;\n\n                    var selection = value.substring(start, end);\n\n                    self.dialog.run(self, 'library');\n\n                    self.dialog.sourceInput.val(selection);\n                }\n            };\n        }\n\n    };\n\n    // Register Editor to window namespace\n    window.Editor = Editor;\n\n\n    // Editor dialog constructor\n    function EditorDialog() {\n        this._init();\n    }\n\n    // Editor dialog prototype\n    EditorDialog.prototype = {\n        // Initialize\n        _init: function () {\n            var self = this;\n\n            // Create a new dialog\n            this.dialog = new Modal($('.modal-editor'), {\n                onConfirmEvent: function (dialog) {\n                    self._setValue();\n                }\n            });\n\n            this.controller = null;\n\n            this.mode = null;\n\n            this.container = this.dialog.el.find('.modal');\n            this.libraryDialog = this.container.find('.editor-modal-library');\n            this.linkDialog = this.container.find('.editor-modal-link');\n\n            this.galleryButton = this.libraryDialog.find('.editor-modal-gallery-button');\n            this.mediaButton = this.libraryDialog.find('.editor-modal-document-button');\n\n            this.sourceInput = this.libraryDialog.find('input[name=\"_src\"]');\n            this.alttextInput = this.libraryDialog.find('input[name=\"_alt\"]');\n\n            this.urlInput = this.linkDialog.find('input[name=\"_link\"]');\n            this.textInput = this.linkDialog.find('input[name=\"_text\"]');\n\n            this._initEvents();\n        },\n        // Initializes events\n        _initEvents: function () {\n            // Cache self\n            var self = this;\n\n            // Gallery button\n            this.galleryButton.on('click', function (e) {\n                self.dialog.closeModal();\n\n                var controller = self.controller._getGalleryController();\n\n                controller.run();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            // Document button\n            this.mediaButton.on('click', function (e) {\n                self.dialog.closeModal();\n\n                var controller = self.controller._getDocumentController();\n\n                controller.run();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        },\n        // Runs the dialog\n        run: function (controller, mode) {\n            this.setMode(mode);\n\n            this.controller = controller;\n\n            this._reset();\n\n            this.dialog.openModal();\n        },\n        // Sets the mode\n        setMode: function (mode) {\n            this.mode = mode;\n\n            this.container.removeClass('library link');\n            this.container.addClass(mode);\n        },\n        // Resets the dialog\n        _reset: function () {\n            this.sourceInput.val('');\n            this.alttextInput.val('');\n\n            this.urlInput.val('');\n            this.textInput.val('');\n        },\n        // Inserts a value depending on mode\n        _setValue: function () {\n            this.controller.deleteSelection();\n\n            if (this.mode === 'library') {\n                this._setValueLibrary();\n            } else if (this.mode === 'link') {\n                this._setValueLink();\n            }\n        },\n        // Set value as link\n        _setValueLink: function () {\n            var url = this.urlInput.val();\n\n            if (url.slice(0, 1) !== '#') {\n                url = add_http(url);\n            }\n\n            var text = (this.textInput.val().length > 0) ? this.textInput.val() : this.urlInput.val();\n\n            var str = '[' + text + '](' + url + ')';\n\n            this.controller.insert(str);\n        },\n        // Set value as image\n        _setValueLibrary: function () {\n            this.controller.insert('![' + this.alttextInput.val() + '](' + this.sourceInput.val() + ')');\n        }\n    };\n\n    // Register editor dialog to window namespace\n    window.EditorDialog = EditorDialog;\n\n\n    // Editor gallery constructor\n    function EditorGallery(controller, library) {\n        this._init(controller, library);\n    }\n\n    // Editor media app\n    EditorGallery.prototype = {\n        // Initialize\n        _init: function (controller, library) {\n            this.library = library;\n\n            this.type = 'gallery';\n\n            this.controller = controller;\n        },\n        // Runs the app\n        run: function () {\n            this.library.run(this);\n        },\n        // Get value\n        getValue: function () {\n            return '';\n        },\n        // Set value\n        setValue: function (media) {\n            var array = [];\n\n            for (var i = 0; i < media.length; i++) {\n                array.push(media[i].id);\n            }\n\n            this.controller.insert('\\n[gallery ids=\"' + array.join(',') + '\"]\\n');\n        }\n    };\n\n    // Register editor gallery to window namespace\n    window.EditorGallery = EditorGallery;\n\n\n    // Editor gallery constructor\n    function EditorDocument(controller, library) {\n        this._init(controller, library);\n    }\n\n    // Editor media app\n    EditorDocument.prototype = {\n        // Initialize\n        _init: function (controller, library) {\n            this.library = library;\n\n            this.type = 'document';\n\n            this.controller = controller;\n        },\n        // Runs the app\n        run: function () {\n            this.library.run(this);\n        },\n        // Get value\n        getValue: function () {\n            return '';\n        },\n        // Set value\n        setValue: function (media) {\n            this.controller.insert('\\n[document id=\"' + media.id + '\"]\\n');\n        }\n    };\n\n    // Register editor media to window namespace\n    window.EditorDocument = EditorDocument;\n\n})(window);","// General highlighters\n$('.form-group input, .form-group textarea').focus(function () {\n    $(this).closest('.form-group').addClass('focus');\n});\n\n$('.form-group input, .form-group textarea').blur(function () {\n    $(this).closest('.form-group').removeClass('focus');\n});\n\n// Password strength meter\n$('.form-group-password').each(function () {\n    new Meter($(this));\n});\n\n// Slug fields\n$('.form-group-slug').each(function () {\n    new Slug($(this));\n});\n\n// Slug fields\n$('.form-group-tag').each(function () {\n    new Tag($(this));\n});\n\n// Initialize color pickers\n$('input.minicolors').minicolors();\n\nwindow.documentsLibrary = new Library($('#library-modal-container'));\n\n// Initialize gallery fields\n$('.form-group-gallery').each(function () {\n    var gallery = new Gallery($(this), window.documentsLibrary);\n});\n\n// Initialize document fields\n$('.form-group-document').each(function () {\n    var document = new Document($(this), window.documentsLibrary);\n});\n\nwindow.editorDialog = new EditorDialog();\n\n// Editors\n$('.form-group-markdown').each(function () {\n    var editor = new Editor($(this), window.documentsLibrary, window.editorDialog);\n});"],"sourceRoot":"/source/"}