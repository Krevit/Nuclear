{"version":3,"sources":["library.js","galleries.js","documents.js","nodesforms.js"],"names":[],"mappingsnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"nodesforms.js","sourcesContent":[";(function (window) {\n    'use strict';\n\n    /**\n     * DocumentsLibrary Constructor\n     */\n    function DocumentsLibrary(el, documentsBag) {\n        this.el = el;\n        this.documentsBag = documentsBag;\n\n        this._init();\n    }\n\n    // Prototype\n    DocumentsLibrary.prototype = {\n        _init: function () {\n            this.documentsList = this.el.find('ul.library-documents');\n            this.documentDetails = this.el.find('div.library-details');\n\n            this.detailsHeader = $('#libraryDetails');\n            this.detailsTranslations = $('#libraryTranslations');\n            this.detailsTranslationsForm = $('#libraryTranslationsForm');\n\n            this.search = $('#librarySearch');\n            this.selected = $('#librarySelected');\n            this.total = $('#libraryTotal');\n\n            this.documentsBlackout = $('#libraryDocumentsBlackout');\n            this.detailsBlackout = $('#libraryDetailsBlackout');\n\n            this.detailsFlaps = this.detailsTranslations.find('li.compact-tabs__tab');\n            this.detailsTabs = this.detailsTranslations.find('div.sub-tab');\n\n            this.detailsurl = this.detailsTranslationsForm.attr('action');\n            this.retrieveurl = this.el.data('retrieveurl');\n            this.loadurl = this.el.data('loadurl');\n            this.searchurl = this.search.attr('action');\n            this.locale = this.el.data('locale');\n            this.locales = this.el.data('locales');\n\n            this.modal = new Modal(this.el);\n\n            this.controller = null;\n\n            this.searchActive = false;\n            this.isBooted = false;\n            this.mode = null;\n            this.masterFilter = null;\n            this.currentFilter = null;\n            this.lastValue = null;\n\n            this.offset = 0;\n            this.take = 30;\n            this.isLoading = false;\n            this.canLoadMode = true;\n\n            this._initUploader();\n\n            this._initEvents();\n        },\n        _initUploader: function () {\n            var self = this;\n\n            this.dropzone = $('#libraryDropzone');\n\n            this.el.on(\"dragenter dragover\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                self.dropzone.addClass('dropzone--library-focus dropzone--focus');\n            });\n\n            this.dropzone.on(\"dragleave\", function () {\n                $(this).removeClass('dropzone--library-focus dropzone--focus');\n            });\n\n            this.dropzone.on(\"drop\", function (e) {\n                e.preventDefault();\n\n                $(this).removeClass('dropzone--library-focus dropzone--focus');\n            });\n\n            this.uploader = new Uploader(this.dropzone, {\n                outputList: '#libraryDocuments',\n                indicatorClass: 'LibraryIndicator',\n                outputAppend: false\n            });\n        },\n        _initEvents: function () {\n            var self = this;\n\n            // SELECT DOCUMENT\n            this.documentsList.on('click', 'li', function () {\n                var document = $(this);\n\n                if (!document.hasClass('library-document--selected')) {\n                    self.selectDocument(document);\n                }\n\n                self._showDetails(document);\n            });\n\n            // FOCUS DOCUMENT\n            this.selected.on('click', 'li', function () {\n                var document = self.documentsList.children('li[data-id=\"' + $(this).data('id') + '\"]');\n\n                self._showDetails(document);\n            });\n\n            // DESELECT DOCUMENT\n            this.documentsList.on('click', '.library-document__select-label', function (e) {\n                e.stopPropagation();\n\n                var document = $(this).closest('.library-document');\n\n                self._toggleDocument(document);\n\n                self._showDetails(document);\n            });\n\n            // CLOSE MODAL\n            this.el.find('i.library__close').on('click', function () {\n                self.modal.closeModal();\n            });\n\n            // EDIT TRANSLATIONS\n            this.detailsTranslationsForm.on('submit', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                self._editDocumentTranslations($(this).serializeArray());\n            });\n\n            // CHANGE TRANSLATION TABS\n            this.detailsFlaps.on('click', function () {\n                self._changeDetailsTab($(this).data('locale'));\n            });\n\n            // INSERT\n            $('#libraryButtons > .button--insert').on('click', function () {\n                self._insertDocuments();\n\n                self.modal.closeModal();\n            });\n\n            // CLEAR\n            $('#libraryButtons > .button--clear').on('click', function () {\n                self._deselectAll();\n            });\n\n            // SEARCH\n            this.search.on('submit', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                var search = $(this).find('input[name=\"q\"]');\n\n                var keywords = search.val().trim();\n\n                self._search(keywords);\n            });\n\n            // SEARCH INPUT ESCAPE/CANCEL SEARCH\n            this.search.children('input[name=\"q\"]').on('keydown', function (e) {\n                if (e.keyCode === 27) {\n                    e.stopPropagation();\n\n                    if ($(this).val().trim() === '') {\n                        $(this).blur();\n                    }\n\n                    self._search('');\n\n                    self.searchActive = false;\n                }\n            });\n\n            // FILTER\n            $('#libraryFilter').on('change', function () {\n                if (self.masterFilter === null) {\n                    self._filterDocuments($(this).val());\n                }\n            });\n\n            // LOAD MORE DOCUMENTS\n            this.el.find('div.library-column__inner--documents').on('scroll', function () {\n                if (self.documentsList.height() - $(this).height() - $(this).scrollTop() - 300 <= 0) {\n                    self._load();\n                }\n            });\n        },\n        run: function (controller) {\n            this.modal.openModal();\n\n            // Boot if not booted\n            if (!this.isBooted) {\n                this.isBooted = true;\n\n                this._expandDocumentsBag();\n\n                this._load();\n            }\n\n            var controllerDirty = false;\n\n            // The controller changes, we need to reset some of the options\n            if (this.controller !== controller) {\n                this.controller = controller;\n                this.mode = controller.mode;\n\n                this._reset();\n                this._setMasterFilter(controller.filter);\n                this._anyDocuments();\n\n                controllerDirty = true;\n            }\n\n            var val = this.controller.getValue();\n\n            // Now let's select documents if necessary\n            if (controllerDirty || this.lastValue !== val) {\n                this._deselectAll();\n\n                this._selectDocuments(val);\n\n                this._initSelectedSortable();\n            }\n\n            this.lastValue = val;\n        },\n        _reset: function () {\n            var scroller = this.documentsList.parent();\n\n            scroller.scrollTop(0);\n            scroller.perfectScrollbar('update');\n\n            if (this.selected.hasClass('ui-sortable')) {\n                this.selected.sortable('destroy');\n            }\n\n            this.documentDetails.addClass('library-details--empty');\n\n            this._search('');\n            this._filterDocuments('all');\n            this._deselectAll();\n            this._sortDocuments();\n        },\n        _setMasterFilter: function (filter) {\n            if (filter === 'all') {\n                this.masterFilter = null;\n\n                this.documentsList.children('li').removeClass('library-document--force-filtered');\n\n                this.el.find('.library-column__tool--filter').removeClass('library-column__tool--disabled');\n\n                return;\n            }\n\n            this.masterFilter = filter;\n\n            this.el.find('.library-column__tool--filter').addClass('library-column__tool--disabled');\n\n            this.documentsList.children('li').addClass('library-document--force-filtered');\n\n            this.documentsList.children('li[data-type=\"' + filter + '\"]').removeClass('library-document--force-filtered');\n        },\n        _expandDocumentsBag: function () {\n            var documents = this.documentsBag.getDocuments();\n\n            for (var i in documents) {\n                var document = documents[i];\n\n                this.createDocument(document.id, document.name, document.type, document.thumbnail, true);\n            }\n        },\n        createDocument: function (id, name, type, thumbnail, append) {\n            if (this.documentsList.children('li[data-id=\"' + id + '\"]').length > 0) {\n                return;\n            }\n\n            var document = $('<li class=\"library-document\" data-id=\"' + id + '\" data-type=\"' + type + '\"></li>');\n\n            $('<div class=\"library-document__select-label\"><i class=\"library-document__select-icon icon-checkbox-checked\"></i><i class=\"library-document__select-icon icon-checkbox-unchecked\"></i></div>').appendTo(document);\n\n            $(thumbnail).appendTo(document);\n\n            $('<p class=\"library-document__name\">' + name + '</p>').appendTo(document);\n\n            if (this.masterFilter !== null && this.masterFilter !== type) {\n                document.addClass('library-document--force-filtered');\n            }\n            else if (this.currentFilter !== null && this.currentFilter !== type) {\n                document.addClass('library-document--filtered');\n            }\n\n            if (append) {\n                this.documentsList.append(document);\n            } else {\n                return document;\n            }\n        },\n        _load: function () {\n            var self = this;\n\n            if (!self.isLoading && !self.searchActive && this.canLoadMode) {\n                self.isLoading = true;\n\n                $.getJSON(self.loadurl, {offset: self.offset}, function (response) {\n                    if (response.remaining <= 0) {\n                        self.canLoadMode = false;\n                    }\n\n                    self._populateLibrary(response.documents);\n\n                    self._anyDocuments();\n\n                    self.isLoading = false;\n                    self.offset += self.take;\n                });\n            }\n        },\n        _populateLibrary: function (documents) {\n            for (var i in documents) {\n                var document = documents[i];\n\n                this.createDocument(document.id, document.name, document.type, document.thumbnail, true);\n\n                this.documentsBag.addDocument(document.id, document);\n            }\n\n            this.documentsList.parent().perfectScrollbar('update');\n        },\n        _sortDocuments: function () {\n            this.documentsList.find('li').sort(function (a, b) {\n                return +b.getAttribute('data-id') - +a.getAttribute('data-id');\n            }).appendTo(this.documentsList);\n        },\n        _anyDocuments: function () {\n            if (this.documentsList.children('li:not(.library-document--hidden,.library-document--force-filtered)').length > 0) {\n                $('#libraryDocumentsMessage').removeClass('library-column__message-container--active');\n            } else {\n                $('#libraryDocumentsMessage').addClass('library-column__message-container--active');\n            }\n        },\n        _filterDocuments: function (filter) {\n            if (filter === 'all') {\n                this.currentFilter = null;\n\n                this.documentsList.children('li').removeClass('library-document--filtered');\n\n                return;\n            }\n\n            this.documentsList.children('li').addClass('library-document--filtered');\n\n            this.currentFilter = filter;\n\n            this.documentsList.children('li[data-type=\"' + filter + '\"]').removeClass('library-document--filtered');\n        },\n        _showDetails: function (document) {\n            this.documentDetails.removeClass('library-details--empty');\n\n            this.documentsList.children('li').removeClass('library-document--detailed');\n            this.selected.children('li').removeClass('library-document--detailed');\n\n            document.addClass('library-document--detailed');\n            this.selected.children('li[data-id=\"' + document.data('id') + '\"]').addClass('library-document--detailed');\n\n            var scroller = this.documentDetails.parent();\n\n            scroller.scrollTop(0);\n            scroller.perfectScrollbar('update');\n\n            this._populateDetails(document.data('id'));\n        },\n        _populateDetails: function (id) {\n            var document = this.documentsBag.getDocument(id);\n\n            this.detailsHeader.html('');\n\n            $('<div class=\"library-details__preview\">' + document.preview + '</div>').appendTo(this.detailsHeader);\n            $('<div class=\"library-details__name\">' + document.name + '</div>').appendTo(this.detailsHeader);\n            $(document.meta).appendTo(this.detailsHeader);\n\n            this._changeDetailsTab(this.locale);\n\n            this._populateTranslationForm(document);\n        },\n        _populateTranslationForm: function (document) {\n            this.detailsTranslationsForm.find('input[name=\"document\"]').val(document.id);\n\n            for (var i in this.locales) {\n                var locale = this.locales[i],\n                    translation = document[locale];\n\n                this.detailsTranslationsForm.find('input[name=\"' + locale + '[caption]\"]').val(translation ? translation.caption : '');\n                this.detailsTranslationsForm.find('textarea[name=\"' + locale + '[description]\"]').val(translation ? translation.description : '');\n                this.detailsTranslationsForm.find('input[name=\"' + locale + '[alttext]\"]').val(translation ? translation.alttext : '');\n            }\n        },\n        _insertDocuments: function () {\n            var val = '';\n\n            if (this.mode === 'document') {\n                var document = this.selected.children('li:first-child');\n\n                if (document.length == 1) {\n                    val = document.data('id');\n                }\n            } else {\n                var array = [],\n                    documents = this.selected.children();\n\n                for (var i = 0; i < documents.length; i++) {\n                    array.push($(documents[i]).data('id'));\n                }\n\n                val = array;\n            }\n\n            this.lastValue = (this.mode === 'document') ? val : JSON.stringify(val);\n\n            this.controller.setValue(val);\n        },\n        _deselectAll: function () {\n            this.documentsList.children('li').removeClass('library-document--selected library-document--detailed');\n\n            this.selected.empty();\n            this.total.text(0);\n\n            this.documentDetails.addClass('library-details--empty');\n        },\n        _selectDocuments: function (val) {\n            if (val === '' || val === '[]' || val == 0) {\n                return;\n            }\n\n            if (this.mode === 'document') {\n                var document = this.documentsList.children('li[data-id=\"' + val + '\"]');\n\n                this.selectDocument(document);\n                this._showDetails(document);\n\n                return;\n            }\n\n            val = JSON.parse(val);\n\n            for (var i in val) {\n                var document = this.documentsList.children('li[data-id=\"' + val[i] + '\"]');\n\n                this.selectDocument(document);\n            }\n        },\n        selectDocument: function (document) {\n            var type = document.data('type');\n\n            if (this.masterFilter !== null && type !== this.masterFilter) {\n                return;\n            }\n\n            if (this.mode === 'document') {\n                this._deselectAll();\n            }\n\n            document.addClass('library-document--selected');\n\n            var thumbnail = $('<li class=\"library-document library-document--compact\" data-id=\"' + document.data('id') + '\"></li>');\n            document.children('.document-thumbnail').clone().appendTo(thumbnail);\n\n            this.selected.append(thumbnail);\n\n            this.total.text(this.selected.children().length);\n        },\n        _deselectDocument: function (document) {\n            document.removeClass('library-document--selected');\n\n            this.selected.children('li[data-id=\"' + document.data('id') + '\"]').remove();\n\n            this.total.text(this.selected.children().length);\n        },\n        _toggleDocument: function (document) {\n            if (document.hasClass('library-document--selected')) {\n                this._deselectDocument(document);\n            } else {\n                this.selectDocument(document);\n            }\n        },\n        // Makes a search\n        _search: function (keywords) {\n            if (keywords === '') {\n                this.documentsList.children('li').removeClass('library-document--hidden');\n\n                this.searchActive = false;\n\n                this._anyDocuments();\n\n                return;\n            }\n\n            this.searchActive = true;\n\n            var self = this,\n                scroller = this.documentsList.parent();\n\n            this._disableDocumentsList();\n\n            $.post(this.searchurl, {q: keywords}, function (response) {\n                self._enableDocumentsList();\n\n                self.documentsList.children('li').addClass('library-document--hidden');\n\n                scroller.scrollTop(0);\n                scroller.perfectScrollbar('update');\n\n                if (response.documents.length > 0) {\n                    self._populateLibrary(response.documents);\n\n                    var selector = 'li[data-id=\"' + response.ids.join('\"],li[data-id=\"') + '\"]';\n                    self.documentsList.children(selector).removeClass('library-document--hidden');\n                }\n\n                self._anyDocuments();\n            }, 'json');\n        },\n        _enableDocumentsList: function () {\n            this.documentsBlackout.removeClass('library-column__blackout--active');\n        },\n        _disableDocumentsList: function () {\n            this.documentsBlackout.addClass('library-column__blackout--active');\n        },\n        _enableDetails: function () {\n            this.detailsBlackout.removeClass('library-column__blackout--active');\n        },\n        _disableDetails: function () {\n            this.detailsBlackout.addClass('library-column__blackout--active');\n        },\n        _initSelectedSortable: function () {\n            if (this.mode === 'document') {\n                return;\n            }\n\n            this.selected.sortable({\n                cursor: 'move',\n                tolerance: 'pointer',\n                placeholder: 'placeholder',\n                opacity: 0.7,\n                delay: 50,\n                scroll: false\n            });\n        },\n        _changeDetailsTab: function (locale) {\n            this.detailsFlaps.removeClass('compact-tabs__tab--active');\n            this.detailsTabs.removeClass('sub-tab--active');\n\n            this.detailsFlaps.siblings('.compact-tabs__tab--' + locale).addClass('compact-tabs__tab--active');\n            this.detailsTabs.siblings('.sub-tab--' + locale).addClass('sub-tab--active');\n        },\n        _editDocumentTranslations: function (info) {\n            var self = this;\n\n            this._disableDetails();\n\n            $.post(this.detailsurl, info, function (document) {\n                self._enableDetails();\n\n                self.documentsBag.addDocument(document.id, document);\n            });\n        }\n    };\n\n    window.DocumentsLibrary = DocumentsLibrary;\n\n    /**\n     * DocumentsBag Constructor\n     */\n    function DocumentsBag() {\n        this._init();\n    }\n\n    // Prototype\n    DocumentsBag.prototype = {\n        _init: function () {\n            this.bag = [];\n        },\n        addDocument: function (id, document) {\n            if (typeof document === 'string') {\n                document = JSON.parse(document);\n            }\n\n            this.bag[id] = document;\n        },\n        getDocument: function (id) {\n            return this.bag[id];\n        },\n        getDocuments: function () {\n            return this.bag;\n        }\n    };\n\n    window.DocumentsBag = DocumentsBag;\n\n    // LibraryIndicator Constructor\n    function LibraryIndicator(file, uploader) {\n        this.uploader = uploader;\n\n        this._init(file);\n    }\n\n    inheritsFrom(LibraryIndicator, UploadIndicator);\n\n    LibraryIndicator.prototype._init = function (file) {\n        this.container = $('<li class=\"library-document\"></li>');\n\n        this.progress = $('<div class=\"upload__progress\"></div>').appendTo(this.container);\n        this.progressBar = $('<div class=\"upload__progress-bar\"></div>').appendTo(this.progress);\n\n        this.thumbnail = $('<div class=\"document-thumbnail\"></div>').appendTo(this.container);\n\n        this.filename = $('<p class=\"library-document__name\">' + html_entities(file.name) + '</p>').appendTo(this.container);\n    };\n\n    LibraryIndicator.prototype._success = function (upload) {\n        upload = upload.summary;\n\n        window.documentsBag.addDocument(upload.id, upload);\n\n        this.container.replaceWith(window.documentsLibrary.createDocument(upload.id, upload.name, upload.type, upload.thumbnail, false));\n\n        var library = window.documentsLibrary;\n        library.selectDocument(library.documentsList.children('li[data-id=\"' + upload.id + '\"]'));\n    };\n\n    LibraryIndicator.prototype._error = function (message) {\n        this.container.remove();\n    };\n\n    window.LibraryIndicator = LibraryIndicator;\n\n})(window);",";(function (window) {\n    'use strict';\n\n    /**\n     * Gallery constructor\n     */\n    function Gallery(el, library, documentsBag) {\n        this.el = el;\n        this.library = library;\n        this.documentsBag = documentsBag;\n\n        this._init();\n    }\n\n    // Prototype\n    Gallery.prototype = {\n        _init: function () {\n            this.input = this.el.find('input[type=\"hidden\"]');\n\n            this.container = this.el.find('.form-group__gallery-container');\n            this.libraryButton = this.el.find('.form-group__buttons > .button--library');\n            this.clearButton = this.el.find('.form-group__buttons > .button--clear');\n\n            this.gallery = this.el.find('ul.form-group__gallery');\n\n            this.mode = 'gallery';\n            this.filter = 'image';\n\n            this._populateDocumentsBag();\n\n            this._initUploader();\n\n            this._initEvents();\n        },\n        _initUploader: function () {\n            var self = this;\n\n            this.dropzone = this.container.find('div.dropzone');\n\n            this.container.on(\"dragenter dragover\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                self.dropzone.addClass('dropzone--library-focus dropzone--focus');\n            });\n\n            this.dropzone.on(\"dragleave\", function () {\n                $(this).removeClass('dropzone--library-focus dropzone--focus');\n            });\n\n            this.dropzone.on(\"drop\", function (e) {\n                e.preventDefault();\n\n                $(this).removeClass('dropzone--library-focus dropzone--focus');\n            });\n\n            this.uploader = new Uploader(this.dropzone, {\n                outputList: this.gallery,\n                indicatorClass: 'GalleryIndicator',\n                isDropzoneForm: false\n            });\n\n            this.uploader.controller = this;\n        },\n        _populateDocumentsBag: function () {\n            var slides = this.gallery.find('li.form-group__slide');\n\n            for (var i = 0; i < slides.length; i++) {\n                var slide = slides.eq(i);\n\n                this.documentsBag.addDocument(slide.data('id'), slide.data('summary'));\n\n                slide.attr('data-summary', '');\n            }\n        },\n        _initEvents: function () {\n            var self = this;\n\n            this.gallery.sortable({\n                cursor: 'move',\n                tolerance: 'pointer',\n                placeholder: 'placeholder',\n                opacity: 0.7,\n                delay: 50,\n                stop: function () {\n                    self.refreshInput();\n                }\n            });\n\n            // Bind events for non touch screens\n            if (!Modernizr.touch) {\n                this.gallery.on('click', '.icon-cancel', function () {\n                    var parent = $(this).parent();\n\n                    $(parent).remove();\n\n                    self.refreshInput();\n                });\n            }\n\n            this.clearButton.on('click', function (e) {\n                self._clearGallery();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            this.libraryButton.on('click', function (e) {\n                self.library.run(self);\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        },\n        _clearGallery: function () {\n            this.input.val('');\n\n            this.gallery.html('');\n\n            this.container.addClass('empty');\n        },\n        refreshInput: function () {\n            var array = this.gallery.sortable('toArray', {attribute: 'data-id'});\n\n            this.input.val(JSON.stringify(array));\n\n            if (this.gallery.children('li').length === 0) {\n                this.container.addClass('empty');\n            } else {\n                this.container.removeClass('empty');\n            }\n        },\n        getValue: function () {\n            return this.input.val();\n        },\n        setValue: function (gallery) {\n            this._clearGallery();\n\n            if (gallery.length > 0) {\n                this.container.removeClass('empty');\n\n                this.gallery.html('');\n\n                for (var i = 0; i < gallery.length; i++) {\n                    this._createSlide(gallery[i]);\n                }\n\n                this.input.val(JSON.stringify(gallery));\n            }\n        },\n        // Create a new thumbnail\n        _createSlide: function (document) {\n            var document = this.documentsBag.getDocument(document);\n\n            var thumbnail = $('<li class=\"form-group__slide\" data-id=\"' + document.id + '\" data-type=\"image\" title=\"' + html_entities(document.name) + '\"><i class=\"icon-cancel\"></i></li>');\n\n            $(document.thumbnail).prependTo(thumbnail);\n\n            this.gallery.append(thumbnail);\n        }\n    };\n\n    window.Gallery = Gallery;\n\n\n    // GalleryIndicator Constructor\n    function GalleryIndicator(file, uploader) {\n        this.uploader = uploader;\n\n        this._init(file);\n    }\n\n    inheritsFrom(GalleryIndicator, UploadIndicator);\n\n    GalleryIndicator.prototype._init = function (file) {\n        this.container = $('<li class=\"form-group__slide\"></li>');\n\n        this.progress = $('<div class=\"upload__progress\"></div>').appendTo(this.container);\n        this.progressBar = $('<div class=\"upload__progress-bar\"></div>').appendTo(this.progress);\n\n        this.thumbnail = $('<div class=\"document-thumbnail\"></div>').appendTo(this.container);\n    };\n\n    GalleryIndicator.prototype._success = function (upload) {\n        upload = upload.summary;\n\n        window.documentsBag.addDocument(upload.id, upload);\n        window.documentsLibrary.createDocument(upload.id, upload.name, upload.type, upload.thumbnail, true);\n\n        if (upload.type !== 'image') {\n            this.container.remove();\n\n            return;\n        }\n\n        this.container.attr('data-id', upload.id);\n        this.container.attr('data-type', upload.type);\n        this.container.attr('title', html_entities(upload.name));\n        this.container.append($('<i class=\"icon-cancel\"></i>'));\n        this.thumbnail.replaceWith(upload.thumbnail);\n\n        this.uploader.controller.refreshInput();\n    };\n\n    GalleryIndicator.prototype._error = function (message) {\n        this.container.remove();\n    };\n\n    window.GalleryIndicator = GalleryIndicator;\n\n})(window);",";(function (window) {\n    'use strict';\n\n    /**\n     * Document constructor\n     */\n    function Document(el, library, documentsBag) {\n        this.el = el;\n        this.library = library;\n        this.documentsBag = documentsBag;\n\n        this._init();\n    }\n\n    // Prototype\n    Document.prototype = {\n        _init: function () {\n            this.input = this.el.find('input[type=\"hidden\"]');\n\n            this.container = this.el.find('.form-group__document-container');\n            this.libraryButton = this.el.find('.form-group__buttons > .button--library');\n            this.clearButton = this.el.find('.form-group__buttons > .button--clear');\n\n            this.document = this.el.find('figure.form-group__document');\n\n            this.mode = 'document';\n            this.filter = this.container.data('filter');\n\n            this._populateDocumentsBag();\n\n            this._initEvents();\n        },\n        _populateDocumentsBag: function () {\n            if (this.document.data('id')) {\n                window.documentsBag.addDocument(\n                    this.document.data('id'),\n                    this.document.data('summary'));\n\n                this.document.attr('data-summary', '');\n            }\n        },\n        _initEvents: function () {\n            var self = this;\n\n            this.clearButton.on('click', function (e) {\n                self._clearDocument();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            this.libraryButton.on('click', function (e) {\n                self.library.run(self);\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        },\n        _clearDocument: function () {\n            this.input.val('');\n\n            this.container.addClass('empty');\n        },\n        getValue: function () {\n            return this.input.val();\n        },\n        setValue: function (document) {\n            if (document !== null && document !== '') {\n                this.container.removeClass('empty');\n\n                this.input.val(document);\n\n                var document = this.documentsBag.getDocument(document);\n\n                this.container.children('figure').remove();\n\n                var thumbnail = $('<figure class=\"form-group__document\" data-id=\"' + document.id + '\" data-type=\"' + document.type + '\"></figure>');\n                $('<span>' + document.thumbnail + '</span>').appendTo(thumbnail);\n                $('<figcaption class=\"form-group__document-title\">' + document.name + '</figcaption>').appendTo(thumbnail);\n\n                this.container.prepend(thumbnail);\n            } else {\n                this._clearDocument();\n            }\n        }\n    };\n\n    window.Document = Document;\n\n})(window);","// DOCUMENTS BAG\nwindow.documentsBag = new DocumentsBag;\n\n// DOCUMENTS LIBRARY\nwindow.documentsLibrary = new DocumentsLibrary($('#libraryModal'), window.documentsBag);\n\n// GALLERY FIELDS\n$('.form-group--gallery').each(function () {\n    new Gallery($(this), window.documentsLibrary, window.documentsBag);\n});\n\n// DOCUMENT FIELDS\n$('.form-group--document').each(function () {\n    new Document($(this), window.documentsLibrary, window.documentsBag);\n});"],"sourceRoot":"/source/"}